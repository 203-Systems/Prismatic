[{"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\index.js":"1","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\serviceWorker.js":"2","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\App.jsx":"3","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\deviceConfigs.js":"4","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\config.js":"5","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\projectFile.js":"6","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\ProjectFileReader.jsx":"7","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\Canvas.jsx":"8","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\AutoplayControl.jsx":"9","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\autoPlay.js":"10","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\keySound.js":"11","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\keyLED.js":"12","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\palette.js":"13","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\Button.jsx":"14","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\buttonConfigs.js":"15"},{"size":480,"mtime":1610853349565,"results":"16","hashOfConfig":"17"},{"size":5227,"mtime":1602971545249,"results":"18","hashOfConfig":"17"},{"size":13728,"mtime":1610869569536,"results":"19","hashOfConfig":"17"},{"size":23276,"mtime":1610878903960,"results":"20","hashOfConfig":"17"},{"size":80,"mtime":1610410124460,"results":"21","hashOfConfig":"17"},{"size":7628,"mtime":1610837773151,"results":"22","hashOfConfig":"17"},{"size":427,"mtime":1610006627608,"results":"23","hashOfConfig":"17"},{"size":16035,"mtime":1610879013351,"results":"24","hashOfConfig":"17"},{"size":2840,"mtime":1610670351205,"results":"25","hashOfConfig":"17"},{"size":3819,"mtime":1610750506540,"results":"26","hashOfConfig":"17"},{"size":1721,"mtime":1610764846376,"results":"27","hashOfConfig":"17"},{"size":4891,"mtime":1610837845925,"results":"28","hashOfConfig":"17"},{"size":5072,"mtime":1610440533168,"results":"29","hashOfConfig":"17"},{"size":1316,"mtime":1610854742148,"results":"30","hashOfConfig":"17"},{"size":1254,"mtime":1610878609790,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l62myl",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\index.js",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\serviceWorker.js",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\App.jsx",["66","67","68","69"],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\deviceConfigs.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\config.js",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\projectFile.js",["107","108","109"],"import KeyLED from \"./keyLED\"\r\nimport AutoPlay from \"./autoPlay\"\r\nimport keySound from './keySound';\r\nimport { Howler } from \"howler\";\r\n\r\nclass ProjectFile {\r\n  info = {};\r\n  soundFiles = {};\r\n  keySound = undefined;\r\n  autoplay = undefined;\r\n  keyLED = undefined;\r\n  canvas = undefined\r\n  activeKeyLED = {}\r\n\r\n  constructor(file, canvas) {\r\n    this.canvas = canvas.current;\r\n    return this.unpack(file);\r\n  }\r\n\r\n  unpack(projectFile) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try{\r\n      console.log(this.info)\r\n      let JSZip = require(\"jszip\");\r\n      let files = await JSZip.loadAsync(projectFile).then(function (zip) {\r\n        return Object.values(zip.files)\r\n      }, function (e) {\r\n        reject(\"Failed to extract selected file\");\r\n        console.log(e);\r\n        return;\r\n      });\r\n      let projectRoot = undefined;\r\n      let keySoundFile = undefined;\r\n      let autoplayFile = undefined;\r\n      let keyLEDFiles = {};\r\n\r\n      //Load info and categorize files\r\n      for (let file of files) {\r\n        let filename = file.name.toLowerCase()\r\n        if (!filename.endsWith(\"/\")) //Ignore folder\r\n        {\r\n          if (filename.includes(\"sounds/\")) //Audio\r\n          {\r\n            console.log(\"Sound file: \" + filename);\r\n            this.soundFiles[filename.split(\"/\").pop()] = await file.async(\"blob\").then(function (blob) {\r\n              return new keySound(blob, filename.split(\"/\").pop())\r\n            });\r\n          }\r\n          else {\r\n            let text = await file.async(\"text\").then((text) => { return text = text.split(/\\r?\\n/); });\r\n            if (filename.endsWith(\"info\")) //Text\r\n            {\r\n              console.log(\"Info file: \" + filename);\r\n              projectRoot = filename.slice(0, -4);\r\n              console.log(\" project root: \" + projectRoot);\r\n              text.forEach(info => this.info[info.split('=')[0]] = info.split('=')[1]);\r\n              this.info[\"buttonX\"] = parseInt(this.info[\"buttonX\"]);\r\n              this.info[\"buttonY\"] = parseInt(this.info[\"buttonY\"]);\r\n              this.info[\"chain\"] = parseInt(this.info[\"chain\"]);\r\n              this.info[\"squareButton\"] = this.info[\"squareButton\"] === \"true\";\r\n              this.info[\"landscape\"] = this.info[\"landscape\"] === \"true\";\r\n              console.log(\" title: \" + this.info[\"title\"])\r\n              console.log(\" producerName: \" + this.info[\"producerName\"])\r\n              console.log(\" buttonX: \" + this.info[\"buttonX\"])\r\n              console.log(\" buttonY: \" + this.info[\"buttonY\"])\r\n              console.log(\" chain: \" + this.info[\"chain\"])\r\n              console.log(\" squareButton: \" + this.info[\"squareButton\"])\r\n              console.log(\" landscape: \" + this.info[\"landscape\"])\r\n              if (this.info[\"buttonX\"] !== 8 || this.info[\"buttonY\"] !== 8) {\r\n                reject(\"Only 8x8 Unipad project are supported\");\r\n                return;\r\n              }\r\n              if (this.info[\"chain\"] > 8) {\r\n                // reject(\"Only Unipad project that has within 8 chains are supported\");\r\n                // alert(`This Unipad Project has ${this.info[\"chain\"]} chains. Projects that has more than 8 chains are limited supported`)\r\n                // return;\r\n              }\r\n            }\r\n            else if (filename.endsWith(\"keysound\")) {\r\n              console.log(\"KeySound file: \" + filename);\r\n              keySoundFile = text;\r\n            }\r\n            else if (filename.endsWith(\"autoplay\")) {\r\n              console.log(\"AutoPlay file: \" + filename);\r\n              autoplayFile = text;\r\n            }\r\n            else if (filename.includes(\"keyled/\")) {\r\n              console.log(\"KeyLED file: \" + filename);\r\n              keyLEDFiles[filename] = text;\r\n            }\r\n            else {\r\n              console.log(\"Unknown file: \" + filename);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      //Initialize 4D arraies\r\n      this.keySound = new Array(this.info.chain).fill(null).map(\r\n        () => new Array(this.info.buttonX).fill(null).map(\r\n          () => new Array(this.info.buttonY).fill(null).map(\r\n            () => new Array())));\r\n\r\n      this.keyLED = new Array(this.info.chain).fill(null).map(\r\n        () => new Array(this.info.buttonX).fill(null).map(\r\n          () => new Array(this.info.buttonY).fill(null).map(\r\n            () => new Array())));\r\n\r\n      // Load KeyLED\r\n      for (var [name, text] of Object.entries(keyLEDFiles)) {\r\n        let fileInfo = name.split(\"/\").pop().split(\" \");\r\n        // if (fileInfo.length === 5) {\r\n        //   this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1][fileInfo[4].charCodeAt(0) - 97] = new KeyLED(text, parseInt(fileInfo[3]), this.canvas)\r\n        //   // console.log(name)\r\n        //   // console.log([parseInt(fileInfo[0]) - 1, parseInt(fileInfo[2]) - 1, parseInt(fileInfo[1]) - 1, fileInfo[4].charCodeAt(0) - 97])\r\n        //   // console.log(this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1][fileInfo[4].charCodeAt(0) - 97])\r\n        // }\r\n        // else if (fileInfo.length === 4) {\r\n          let index = fileInfo[4] !== undefined ? fileInfo[4].charCodeAt(0) - 97 : 0 //97 is 'a' \r\n          // console.log([parseInt(fileInfo[0]) - 1, parseInt(fileInfo[2]) - 1, parseInt(fileInfo[1]) - 1, index])\r\n          let [chain, x, y, repeat] = [parseInt(fileInfo[0]) - 1, parseInt(fileInfo[2]) - 1, parseInt(fileInfo[1]) - 1, parseInt(fileInfo[3])]\r\n          this.keyLED[chain][x][y][index] = new KeyLED(text, repeat, this.canvas, [chain, x, y, index], this.activeKeyLED)\r\n        // }\r\n        // else {\r\n        //   console.warn(\"Unknown keyLED file name: \" + name);\r\n        // }\r\n      }\r\n\r\n      //Load KeySound\r\n      for (var line of keySoundFile) {\r\n        line = line.trim()\r\n\r\n        if (line == \"\") //For empty lines\r\n        continue;\r\n\r\n        let command = line.split(\" \");\r\n\r\n        // console.log(command);\r\n        let [chain, x, y, filename] = [parseInt(command[0]) - 1, parseInt(command[2]) - 1, parseInt(command[1]) - 1, command[3].toLowerCase()]\r\n        this.keySound[chain][x][y].push([this.soundFiles[filename], command.slice(4)]);\r\n      }\r\n\r\n      //Load AutoPlay\r\n      if(autoplayFile !== undefined)\r\n        this.autoplay = new AutoPlay(autoplayFile, this.canvas);\r\n\r\n      resolve(this)\r\n    }\r\n    catch(e)\r\n    {\r\n      reject(e)\r\n    }\r\n    });\r\n  }\r\n\r\n  stopKeySound() {\r\n    Howler.stop()\r\n  }\r\n\r\n  stopKeyLED() {\r\n    // console.log(this.activeKeyLED)\r\n    for(var id_str in this.activeKeyLED)\r\n    {\r\n      var[chain, x, y, index] = this.activeKeyLED[id_str]\r\n      this.keyLED[chain][x][y][index].stop(false)\r\n      delete this.activeKeyLED[id_str]\r\n    }\r\n    setTimeout(this.canvas.clearCanvas(), 200)\r\n    // new KeyLED().stopAll()\r\n    // for (var chain = 0; chain < this.info.chain; chain++) {\r\n    //   for (\r\n    //     var x = 0;\r\n    //     chain < this.keyLED[chain].length;\r\n    //     x++\r\n    //   ) {\r\n    //     for (\r\n    //       var y = 0;\r\n    //       chain < this.keyLED[chain][x].length;\r\n    //       y++\r\n    //     ) {\r\n    //       for (\r\n    //         var index = 0;\r\n    //         chain < this.keyLED[chain][x][y].length;\r\n    //         index++\r\n    //       ) {\r\n    //         if (\r\n    //           this.keyLED[chain][x][y][index] !== undefined\r\n    //         ) {\r\n    //           this.keyLED[chain][x][y][index].stop();\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  stopAll() {\r\n    this.stopKeyLED()\r\n    this.stopKeySound()\r\n  }\r\n}\r\n\r\nexport default ProjectFile;",["110","111"],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\ProjectFileReader.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\Canvas.jsx",["112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\AutoplayControl.jsx",["126","127","128"],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\autoPlay.js",["129"],"class AutoPlay {\r\n  autoplay = undefined;\r\n  status = \"STOPPED\"\r\n  progress = 0\r\n  total = 0\r\n  led = true;\r\n  currentChain = 0\r\n  canvas = undefined;\r\n  lastEventTime = undefined;\r\n\r\n  constructor(text, canvas) {\r\n    this.autoplay = text;\r\n    this.total = text === undefined ? 0 : text.length;\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  play = async (callback) => {\r\n    // console.time(\"Autoplay\")\r\n    if (this.progress === 0) {\r\n      this.canvas.initlalizeCanvas();\r\n      // this.currentChain = parseInt(0);\r\n    }\r\n    this.status = \"PLAYING\"\r\n    this.lastEventTime = Date.now()\r\n    for (this.progress; this.progress < this.autoplay.length; this.progress++) {\r\n      // console.timeEnd(\"Autoplay\");\r\n      // console.time(\"Autoplay\")\r\n\r\n      if (this.status === \"STOPPED\" || this.status === \"PAUSED\") {\r\n        return;\r\n      }\r\n\r\n      console.log(this.autoplay[this.progress])\r\n      let command = this.autoplay[this.progress].split(\" \");\r\n\r\n      if(callback !== undefined)\r\n        callback([this.progress, this.autoplay.length])\r\n\r\n      if (command.length < 2)\r\n        continue;\r\n\r\n      if (this.canvas.currentChain != this.currentChain) {\r\n        this.canvas.chainChange(this.currentChain);\r\n      }\r\n\r\n      switch (command[0]) {\r\n        case 'o':\r\n        case 'on':\r\n          if(this.led)\r\n          {\r\n            this.canvas.keyOn(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true);\r\n          }\r\n          else\r\n          {\r\n            this.canvas.keyOn(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true, true, false);\r\n            this.canvas.setColor(parseInt(command[2]) - 1, parseInt(command[1]) - 1, 127)\r\n          }\r\n          break;\r\n        case 'f':\r\n        case 'off':\r\n          if(this.led)\r\n          {\r\n            this.canvas.keyOff(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true);\r\n          }\r\n          else\r\n          {\r\n            this.canvas.keyOff(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true);\r\n            this.canvas.setColor(parseInt(command[2]) - 1, parseInt(command[1]) - 1, 0)\r\n          }\r\n          break;\r\n        case 't':\r\n        case 'touch':\r\n            if(this.led)\r\n            {\r\n              this.canvas.keyOn(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true);\r\n              this.canvas.keyOff(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true);\r\n            }\r\n            else\r\n            {\r\n              this.canvas.keyOn(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true, true, false);\r\n              this.canvas.keyOff(parseInt(command[2]) - 1, parseInt(command[1]) - 1, undefined, true);\r\n              this.canvas.setColor(parseInt(command[2]) - 1, parseInt(command[1]) - 1, 3)\r\n              setTimeout(() => {this.canvas.setColor(parseInt(command[2]) - 1, parseInt(command[1]) - 1, 0)}, 200)\r\n            }\r\n            break;\r\n        case 'd':\r\n        case 'delay':\r\n          var ms = parseInt(command[1])\r\n          if(ms < 10)\r\n            break;\r\n          await this.wait(parseInt(command[1]));\r\n          break;\r\n        case 'c':\r\n        case 'chain':\r\n          this.canvas.chainChange(parseInt(command[1]) - 1);\r\n          this.currentChain = parseInt(command[1]) - 1;\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n    this.status = \"STOPPED\"\r\n    this.progress = 0\r\n  }\r\n\r\n  pause() {\r\n    this.status = \"PAUSED\"\r\n  }\r\n\r\n  stop() {\r\n    this.status = \"STOPPED\"\r\n    this.progress = 0\r\n  }\r\n\r\n  wait(ms) {\r\n    var adjusted_ms = this.lastEventTime + ms - Date.now()\r\n    this.lastEventTime += ms\r\n    if(adjusted_ms > 5)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, adjusted_ms))\r\n    }\r\n    else\r\n    {\r\n      return \r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoPlay;","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\keySound.js",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Engine\\keyLED.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"class KeyLED\r\n{\r\n  keyLED = undefined\r\n  id = undefined\r\n  id_str = undefined\r\n  repeat = 1;\r\n  end = false;\r\n  activeThread = -1\r\n  nextID = 0\r\n  canvas = undefined\r\n  currentOn=[]\r\n  lastEventTime = undefined;\r\n  activeList = undefined //Global, refence to the activeKeyLED object in the projectFile\r\n\r\n  constructor(text, repeat, canvas, id, activeList)\r\n  {\r\n    this.keyLED = text;\r\n    this.repeat = repeat;\r\n    this.canvas = canvas;\r\n    this.id = id;\r\n    this.id_str = `${id[0]} ${id[1]} ${id[2]} ${id[3]}` \r\n    this.activeList = activeList\r\n  }\r\n\r\n  play = async() =>\r\n  {\r\n    if(this.activeList[this.id_str] === undefined)\r\n    {\r\n      this.activeList[this.id_str] = this.id\r\n      // console.log(\"Active List added\")\r\n      // console.log(this.activeList)\r\n    }\r\n    var threadID = this.getID()\r\n    this.activeThread = threadID\r\n    this.currentOn = []\r\n    var currentLoop = 0\r\n    this.end = false;\r\n    this.lastEventTime = Date.now()\r\n    // console.log(\"KeyLED\")\r\n    // console.timeLog(\"KeyOn\")\r\n    while(this.repeat === 0 || currentLoop++ < this.repeat)\r\n    {\r\n      for(var line of this.keyLED)\r\n      {\r\n        line = line.trim()\r\n        if(this.activeThread != threadID)\r\n          return\r\n\r\n        if(line == \"\")\r\n          continue;\r\n        \r\n        let command = line.split(\" \");\r\n        // console.log(line)\r\n\r\n        switch(command[0])\r\n        {\r\n          case 'o': //set color\r\n          case 'on': //set color\r\n              if(command[1] === \"*\")\r\n              {\r\n                command[1] = \"mc\"\r\n              }\r\n              if(command[1] === \"mc\" || command[1] === \"l\") //For \"l\", the y is garbage but it won't be read for the setColor functions so just gonna let it be\r\n              {\r\n                [x, y] = [command[1], parseInt(command[2] - 1)]\r\n              }\r\n              else if(parseInt(command[1]) !== NaN)\r\n              {\r\n                [x, y] = [parseInt(command[2] - 1), parseInt(command[1] - 1)]\r\n              }\r\n\r\n              var color\r\n              if(command[command.length - 2] === \"a\" || command[command.length - 2] === \"auto\")\r\n              {\r\n                color = parseInt(command[command.length - 1])\r\n              }\r\n              else\r\n              {\r\n                color = \"#\" + command[command.length - 1]\r\n              }\r\n\r\n              this.canvas.setColor(x, y, color)\r\n\r\n              var id = x + \"-\" + y\r\n              if(this.currentOn[id] === undefined) \r\n              {\r\n                this.currentOn[id] = [x, y]\r\n              }\r\n              else if(color === 0)\r\n              {\r\n                delete this.currentOn[id]\r\n              }\r\n              break;\r\n          case 'f': //color off\r\n          case 'off': //color off\r\n            var [x, y] = [undefined, undefined]\r\n            if(command[1] === \"*\")\r\n            {\r\n              command[1] = \"mc\"\r\n            }\r\n            if(command[1] === \"mc\" || command[1] === \"l\")\r\n            {\r\n              [x, y] = [command[1], parseInt(command[2] - 1)]\r\n            }\r\n            else if(parseInt(command[1]) !== NaN)\r\n            {\r\n              [x, y] = [parseInt(command[2] - 1), parseInt(command[1] - 1)]\r\n            }\r\n\r\n            this.canvas.setColor(x, y, 0)\r\n            var id = x + \"-\" + y\r\n            delete this.currentOn[id]\r\n            break;\r\n          case 'd': //wait\r\n          case 'delay': \r\n          await this.wait(parseInt(command[1]));\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n      if(this.end)\r\n      {\r\n        this.stop()\r\n        break;\r\n      }\r\n    }\r\n    if(this.activeThread == threadID) //Added due to current thread on the last wait then the next thread started. This will result in the next thread to be stuck\r\n    {\r\n      this.activeThread = -1\r\n      this.removeFromActiveList()\r\n    }\r\n  }\r\n\r\n  wait(ms)\r\n  {\r\n    var adjusted_ms = this.lastEventTime + ms - Date.now()\r\n    this.lastEventTime += ms\r\n    if(adjusted_ms > 5)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, adjusted_ms))\r\n    }\r\n    else\r\n    {\r\n      return \r\n    }\r\n  }\r\n\r\n  getID()\r\n  {\r\n    return this.nextID++;\r\n  }\r\n\r\n  stop(clearLight = true)\r\n  { \r\n    //Threading System (Light 1 in delay then we set it to stop and create a Light 2 so it can start right away, set )\r\n    if(this.activeThread === -1)\r\n      return\r\n    this.activeThread = -1\r\n    if(clearLight)\r\n    {\r\n      for(var id in this.currentOn)\r\n      {\r\n        var [x,y] = this.currentOn[id]\r\n        this.canvas.setColor(x, y, 0)\r\n      }\r\n    }\r\n    this.currentOn = []\r\n    this.removeFromActiveList()\r\n  }\r\n\r\n  endLoop()\r\n  {\r\n    this.end = true\r\n  }\r\n\r\n  removeFromActiveList()\r\n  {\r\n    // console.log(\"Try to delete \" + this.id_str)\r\n    // console.log(this.activeList)\r\n    delete this.activeList[this.id_str]\r\n    // console.log(this.activeList)\r\n  }\r\n}\r\n\r\nexport default KeyLED;","C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\palette.js",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\Components\\Button.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\prismatic\\src\\buttonConfigs.js",[],{"ruleId":"146","severity":1,"message":"147","line":12,"column":3,"nodeType":"148","messageId":"149","endLine":14,"endColumn":4},{"ruleId":"150","severity":1,"message":"151","line":68,"column":10,"nodeType":"152","messageId":"153","endLine":68,"endColumn":14,"fix":"154"},{"ruleId":"155","severity":1,"message":"156","line":164,"column":11,"nodeType":"157","messageId":"158","endLine":171,"endColumn":12},{"ruleId":"159","severity":1,"message":"160","line":351,"column":17,"nodeType":"161","messageId":"162","endLine":351,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":76,"column":28,"nodeType":"165","messageId":"153","endLine":76,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":76,"column":53,"nodeType":"165","messageId":"153","endLine":76,"endColumn":55},{"ruleId":"159","severity":1,"message":"166","line":86,"column":15,"nodeType":"161","messageId":"162","endLine":86,"endColumn":17},{"ruleId":"159","severity":1,"message":"167","line":87,"column":15,"nodeType":"161","messageId":"162","endLine":87,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":99,"column":20,"nodeType":"165","messageId":"170","endLine":99,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":99,"column":29,"nodeType":"165","messageId":"170","endLine":99,"endColumn":31},{"ruleId":"163","severity":1,"message":"171","line":207,"column":20,"nodeType":"165","messageId":"153","endLine":207,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":214,"column":28,"nodeType":"165","messageId":"153","endLine":214,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":214,"column":53,"nodeType":"165","messageId":"153","endLine":214,"endColumn":55},{"ruleId":"159","severity":1,"message":"166","line":224,"column":15,"nodeType":"161","messageId":"162","endLine":224,"endColumn":17},{"ruleId":"159","severity":1,"message":"167","line":225,"column":15,"nodeType":"161","messageId":"162","endLine":225,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":237,"column":20,"nodeType":"165","messageId":"170","endLine":237,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":237,"column":29,"nodeType":"165","messageId":"170","endLine":237,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":299,"column":28,"nodeType":"165","messageId":"153","endLine":299,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":299,"column":53,"nodeType":"165","messageId":"153","endLine":299,"endColumn":55},{"ruleId":"159","severity":1,"message":"166","line":309,"column":15,"nodeType":"161","messageId":"162","endLine":309,"endColumn":17},{"ruleId":"159","severity":1,"message":"167","line":310,"column":15,"nodeType":"161","messageId":"162","endLine":310,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":322,"column":20,"nodeType":"165","messageId":"170","endLine":322,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":322,"column":29,"nodeType":"165","messageId":"170","endLine":322,"endColumn":31},{"ruleId":"163","severity":1,"message":"171","line":388,"column":20,"nodeType":"165","messageId":"153","endLine":388,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":395,"column":28,"nodeType":"165","messageId":"153","endLine":395,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":395,"column":53,"nodeType":"165","messageId":"153","endLine":395,"endColumn":55},{"ruleId":"159","severity":1,"message":"172","line":406,"column":15,"nodeType":"161","messageId":"162","endLine":406,"endColumn":16},{"ruleId":"159","severity":1,"message":"173","line":407,"column":15,"nodeType":"161","messageId":"162","endLine":407,"endColumn":16},{"ruleId":"159","severity":1,"message":"167","line":408,"column":15,"nodeType":"161","messageId":"162","endLine":408,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":415,"column":20,"nodeType":"165","messageId":"170","endLine":415,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":415,"column":29,"nodeType":"165","messageId":"170","endLine":415,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":551,"column":28,"nodeType":"165","messageId":"153","endLine":551,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":561,"column":15,"nodeType":"161","messageId":"176","endLine":561,"endColumn":16},{"ruleId":"174","severity":1,"message":"177","line":562,"column":15,"nodeType":"161","messageId":"176","endLine":562,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":569,"column":20,"nodeType":"165","messageId":"170","endLine":569,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":569,"column":29,"nodeType":"165","messageId":"170","endLine":569,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":618,"column":28,"nodeType":"165","messageId":"153","endLine":618,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":628,"column":15,"nodeType":"161","messageId":"176","endLine":628,"endColumn":16},{"ruleId":"174","severity":1,"message":"177","line":629,"column":15,"nodeType":"161","messageId":"176","endLine":629,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":636,"column":20,"nodeType":"165","messageId":"170","endLine":636,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":636,"column":29,"nodeType":"165","messageId":"170","endLine":636,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":102,"column":19,"nodeType":"180","messageId":"181","endLine":102,"endColumn":30},{"ruleId":"178","severity":1,"message":"179","line":107,"column":19,"nodeType":"180","messageId":"181","endLine":107,"endColumn":30},{"ruleId":"163","severity":1,"message":"171","line":133,"column":18,"nodeType":"165","messageId":"153","endLine":133,"endColumn":20},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":49,"column":5,"nodeType":"188","endLine":49,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":76,"column":7,"nodeType":"157","messageId":"158","endLine":87,"endColumn":8},{"ruleId":"163","severity":1,"message":"164","line":79,"column":24,"nodeType":"165","messageId":"153","endLine":79,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":84,"column":9,"nodeType":"191","messageId":"192","endLine":86,"endColumn":17},{"ruleId":"163","severity":1,"message":"171","line":165,"column":104,"nodeType":"165","messageId":"153","endLine":165,"endColumn":106},{"ruleId":"163","severity":1,"message":"164","line":180,"column":44,"nodeType":"165","messageId":"153","endLine":180,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":180,"column":101,"nodeType":"165","messageId":"153","endLine":180,"endColumn":103},{"ruleId":"163","severity":1,"message":"171","line":206,"column":35,"nodeType":"165","messageId":"153","endLine":206,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":218,"column":9,"nodeType":"188","endLine":218,"endColumn":38},{"ruleId":"186","severity":1,"message":"187","line":220,"column":9,"nodeType":"188","endLine":220,"endColumn":38},{"ruleId":"163","severity":1,"message":"171","line":232,"column":42,"nodeType":"165","messageId":"153","endLine":232,"endColumn":44},{"ruleId":"155","severity":1,"message":"156","line":269,"column":5,"nodeType":"157","messageId":"158","endLine":282,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":320,"column":7,"nodeType":"157","messageId":"158","endLine":331,"endColumn":8},{"ruleId":"159","severity":1,"message":"160","line":327,"column":20,"nodeType":"161","messageId":"162","endLine":327,"endColumn":21},{"ruleId":"163","severity":1,"message":"171","line":41,"column":28,"nodeType":"165","messageId":"153","endLine":41,"endColumn":30},{"ruleId":"163","severity":1,"message":"171","line":41,"column":72,"nodeType":"165","messageId":"153","endLine":41,"endColumn":74},{"ruleId":"155","severity":1,"message":"156","line":43,"column":5,"nodeType":"157","messageId":"158","endLine":65,"endColumn":6},{"ruleId":"163","severity":1,"message":"164","line":42,"column":36,"nodeType":"165","messageId":"153","endLine":42,"endColumn":38},{"ruleId":"163","severity":1,"message":"164","line":46,"column":30,"nodeType":"165","messageId":"153","endLine":46,"endColumn":32},{"ruleId":"163","severity":1,"message":"171","line":49,"column":17,"nodeType":"165","messageId":"153","endLine":49,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":65,"column":18,"nodeType":"161","messageId":"195","endLine":65,"endColumn":19},{"ruleId":"193","severity":1,"message":"196","line":65,"column":21,"nodeType":"161","messageId":"195","endLine":65,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":67,"column":23,"nodeType":"165","messageId":"199","endLine":67,"endColumn":51},{"ruleId":"193","severity":1,"message":"194","line":69,"column":18,"nodeType":"161","messageId":"195","endLine":69,"endColumn":19},{"ruleId":"193","severity":1,"message":"196","line":69,"column":21,"nodeType":"161","messageId":"195","endLine":69,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":82,"column":36,"nodeType":"161","messageId":"195","endLine":82,"endColumn":37},{"ruleId":"193","severity":1,"message":"196","line":82,"column":39,"nodeType":"161","messageId":"195","endLine":82,"endColumn":40},{"ruleId":"193","severity":1,"message":"194","line":84,"column":24,"nodeType":"161","messageId":"195","endLine":84,"endColumn":25},{"ruleId":"193","severity":1,"message":"196","line":84,"column":34,"nodeType":"161","messageId":"195","endLine":84,"endColumn":35},{"ruleId":"193","severity":1,"message":"194","line":87,"column":39,"nodeType":"161","messageId":"195","endLine":87,"endColumn":40},{"ruleId":"193","severity":1,"message":"196","line":87,"column":42,"nodeType":"161","messageId":"195","endLine":87,"endColumn":43},{"ruleId":"197","severity":1,"message":"198","line":105,"column":21,"nodeType":"165","messageId":"199","endLine":105,"endColumn":49},{"ruleId":"159","severity":1,"message":"166","line":111,"column":17,"nodeType":"161","messageId":"162","endLine":111,"endColumn":19},{"ruleId":"163","severity":1,"message":"171","line":127,"column":26,"nodeType":"165","messageId":"153","endLine":127,"endColumn":28},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"200","text":"201"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-redeclare","'i' is already defined.","Identifier","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'id' is already defined.","'hex' is already defined.","no-mixed-operators","Unexpected mix of '&' and '>>'.","unexpectedMixedOperator","Expected '===' and instead saw '=='.","'x' is already defined.","'y' is already defined.","no-unused-vars","'x' is assigned a value but never used.","unusedVar","'y' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-use-before-define","'x' was used before it was defined.","usedBeforeDefined","'y' was used before it was defined.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN",[1749,1760],"","no-global-assign","no-unsafe-negation"]