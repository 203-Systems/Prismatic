[{"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\index.js":"1","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\serviceWorker.js":"2","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\App.jsx":"3","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\deviceConfigs.js":"4","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\ProjectFileReader.jsx":"5","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Button.jsx":"6","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Canvas.jsx":"7","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\palette.js":"8","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\projectFile.js":"9","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\keyLED.js":"10","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\autoPlay.js":"11","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\config.js":"12","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Autoplay.jsx":"13","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\keySound.js":"14","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\howler.js":"15"},{"size":510,"mtime":1603035885985,"results":"16","hashOfConfig":"17"},{"size":5227,"mtime":1602971545249,"results":"18","hashOfConfig":"17"},{"size":11961,"mtime":1610580644114,"results":"19","hashOfConfig":"17"},{"size":16191,"mtime":1610576853308,"results":"20","hashOfConfig":"17"},{"size":427,"mtime":1610006627608,"results":"21","hashOfConfig":"17"},{"size":1052,"mtime":1610567878204,"results":"22","hashOfConfig":"17"},{"size":16896,"mtime":1610581138360,"results":"23","hashOfConfig":"17"},{"size":5072,"mtime":1610440533168,"results":"24","hashOfConfig":"17"},{"size":6148,"mtime":1610617786372,"results":"25","hashOfConfig":"17"},{"size":3475,"mtime":1610580427484,"results":"26","hashOfConfig":"17"},{"size":2424,"mtime":1610580231090,"results":"27","hashOfConfig":"17"},{"size":80,"mtime":1610410124460,"results":"28","hashOfConfig":"17"},{"size":2535,"mtime":1610412691406,"results":"29","hashOfConfig":"17"},{"size":1849,"mtime":1610622626558,"results":"30","hashOfConfig":"17"},{"size":85429,"mtime":1610620765339,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"91t3ss",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":7,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\index.js",[],["69","70"],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\serviceWorker.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\App.jsx",["71","72","73","74"],"import React, { Component } from \"react\";\r\nimport ProjectFileReader from \"./ProjectFileReader\";\r\nimport ProjectFile from \"../Engine/projectFile\";\r\nimport Canvas from \"./Canvas\";\r\nimport config from \"../config\";\r\nimport deviceConfigs from \"../deviceConfigs\";\r\nimport Select from \"react-select\";\r\nimport AutoplayControl from \"./Autoplay\";\r\nimport WebMidi from \"webmidi\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    setTimeout((this.initlization).bind(this), 0) //Hacky way to get initlization done after first render\r\n  }\r\n\r\n  initlization()\r\n  {\r\n    WebMidi.enable(err => {\r\n\r\n      if (err) {\r\n        this.onMIDIFailure()\r\n      } else {\r\n        this.onMIDISuccess();\r\n      }},\r\n      true\r\n    );\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    if (urlParams.get(\"unipack\")) {\r\n      var unipack_url = urlParams.get(\"unipack\");\r\n      this.downloadProjectFile(unipack_url);\r\n    }\r\n\r\n      // this.updateCookie();\r\n  }\r\n\r\n  state = {\r\n    projectFile: undefined,\r\n\r\n    midiInput: [],\r\n    midiOutput: [],\r\n\r\n    layoutConfigName: config.defaultLayout,\r\n    layoutConfig: deviceConfigs[config.defaultLayout],\r\n\r\n    inputDevice: undefined,\r\n    inputConfigName: undefined,\r\n    inputConfig: undefined,\r\n\r\n    outputDevice: undefined,\r\n    outputConfigName: undefined,\r\n    outputConfig: undefined,\r\n  };\r\n\r\n  canvas = React.createRef();\r\n\r\n  cookie = {\r\n    perferedLayout: undefined,\r\n    perferedInput: undefined,\r\n    perferedInputConfig: undefined,\r\n    perferedOutput: undefined,\r\n    perferedOutputConfig: undefined,\r\n  }\r\n\r\n  downloadProjectFile = (url) => {\r\n    alert(\"Download Unipack from \" + url)\r\n    fetch(\"https://cors-anywhere.herokuapp.com/\" + url).then\r\n    ((r => \r\n      {var file = r.blob();\r\n        console.log(file);\r\n        this.loadProjectFile(file);\r\n      }).bind(this));\r\n  };\r\n\r\n  loadProjectFile = (projectPack) => {\r\n    // console.log(projectPack)\r\n    new ProjectFile(projectPack, this.canvas)\r\n      .then((projectFile) => {\r\n        this.setState({ projectFile: projectFile });\r\n        console.log(projectFile);\r\n      })\r\n      .catch((message) => {\r\n        alert(message);\r\n      });\r\n  };\r\n\r\n  onMIDISuccess(){\r\n    console.log(\"Got access your MIDI devices.\");\r\n\r\n    this.updateMidiList();\r\n\r\n    WebMidi.addListener(\"connected\", this.onMidiStateChange.bind(this))\r\n    WebMidi.addListener(\"disconnected\", this.onMidiStateChange.bind(this))\r\n  };\r\n\r\n  onMidiStateChange(e) {\r\n    console.log(e);\r\n    console.log(e.port.name, e.port.type, e.port.state);\r\n    if (e.port.state === \"disconnected\") {\r\n      if (e.port.type === \"input\") {\r\n        if (\r\n          this.state.inputDevice !== undefined &&\r\n          this.state.inputDevice.name === e.port.name\r\n        ) {\r\n          this.setState({ inputDevice: undefined });\r\n          this.setState({ inputDeviceConfig: undefined });\r\n          this.setState({ inputDeviceName: undefined });\r\n        }\r\n      } else if (e.port.type === \"output\") {\r\n        if (\r\n          this.state.outputDevice !== undefined &&\r\n          this.state.outputDevice.name === e.port.name\r\n        ) {\r\n          this.setState({ outputDevice: undefined });\r\n          this.setState({ outputDeviceConfig: undefined });\r\n          this.setState({ outputDeviceName: undefined });\r\n        }\r\n      }\r\n    }\r\n    this.updateMidiList();\r\n  }\r\n  \r\n  updateMidiList() {\r\n    var midiInput = [];\r\n    console.log(\"Input\");\r\n    for (var input of WebMidi.inputs) {\r\n      console.log(input.name);\r\n      midiInput.push({ label: input.name, value: input });\r\n    }\r\n    this.setState({ midiInput: midiInput });\r\n\r\n    var midiOutput = [];\r\n    console.log();\r\n    console.log(\"Output\");\r\n    for (var output of WebMidi.outputs) {\r\n      console.log(output.name);\r\n      midiOutput.push({ label: output.name, value: output });\r\n    }\r\n    this.setState({ midiOutput: midiOutput });\r\n  }\r\n\r\n\r\n  onMIDIFailure() {\r\n    console.log(\"Could not access your MIDI devices.\");\r\n    alert(\r\n      \"Could not access your MIDI devices. Try use another web browser or hardware platform.\"\r\n    );\r\n  }\r\n\r\n  autoConfigPicker(deviceName, mode) {\r\n    //mode 0 for input, mode 1 for output\r\n    if (deviceName !== undefined) {\r\n      for (var key in deviceConfigs) {\r\n        if (deviceName.match(deviceConfigs[key].midiNameRegex) !== null) {\r\n          var config = deviceConfigs[key];\r\n          console.log(\r\n            `${\r\n              mode ? \"Output\" : \"input\"\r\n            } config has been auto assigned to ${key}`\r\n          );\r\n          switch (mode) {\r\n            case 0:\r\n              this.setInputConfig({label: key, value: config})\r\n              return true;\r\n            case 1:\r\n              this.setOutputConfig({label: key, value: config})\r\n              return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    alert(\r\n      `Unable to find matching ${\r\n        mode ? \"output\" : \"input\"\r\n      } config for device ${deviceName}`\r\n    );\r\n    return false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main\">\r\n          <div className=\"sidebar\">\r\n            <text>203 | Prismatic (Tech Preview Demo)</text>\r\n            <div className=\"sidebarItem\" />\r\n            <text className=\"sidebarItem\">\r\n              {this.state.projectFile !== undefined\r\n                ? `Current Project: ${this.state.projectFile.info[\"title\"]} by ${this.state.projectFile.info[\"producerName\"]}`\r\n                : \"No project loaded\"}\r\n            </text>\r\n            <ProjectFileReader\r\n              loadProjectFile={this.loadProjectFile}\r\n            ></ProjectFileReader>\r\n            <div className=\"sidebarItem\" />\r\n            <text>UI Layout</text>\r\n            <Select\r\n              className=\"sidebarItem\"\r\n              options={this.prepSelectConfig(deviceConfigs, \"layout\")}\r\n              autosize={true}\r\n              value={\r\n                this.state.layoutConfigName !== undefined\r\n                  ? {\r\n                      label: this.state.layoutConfigName,\r\n                      value: this.state.layoutConfig,\r\n                    }\r\n                  : { label: \"Layout Config\", value: undefined }\r\n              }\r\n              onChange={this.setLayoutConfig.bind(this)}\r\n            />\r\n            <text>Midi Input Device</text>\r\n            <Select\r\n              className=\"sidebarItem\"\r\n              options={this.state.midiInput}\r\n              autosize={true}\r\n              value={\r\n                this.state.inputDevice !== undefined\r\n                  ? {\r\n                      label: this.state.inputDevice.name,\r\n                      value: this.state.inputDevice,\r\n                    }\r\n                  : { label: \"Input Device\", value: undefined }\r\n              }\r\n              onChange={this.setInputDevice.bind(this)}\r\n            />\r\n            <text>Midi Input Device Config</text>\r\n            <Select\r\n              className=\"sidebarItem\"\r\n              options={this.prepSelectConfig(deviceConfigs, \"keymap\")}\r\n              autosize={true}\r\n              value={\r\n                this.state.inputConfigName !== undefined\r\n                  ? {\r\n                      label: this.state.inputConfigName,\r\n                      value: this.state.inputConfig,\r\n                    }\r\n                  : { label: \"Input Device Config\", value: undefined }\r\n              }\r\n              onChange={this.setInputConfig.bind(this)}\r\n            />\r\n            <text>Midi Output Device</text>\r\n            <Select\r\n              className=\"sidebarItem\"\r\n              options={this.state.midiOutput}\r\n              autosize={true}\r\n              value={\r\n                this.state.outputDevice !== undefined\r\n                  ? {\r\n                      label: this.state.outputDevice.name,\r\n                      value: this.state.outputDevice,\r\n                    }\r\n                  : { label: \"Output Device\", value: undefined }\r\n              }\r\n              onChange={this.setOutputDevice.bind(this)}\r\n            />\r\n            <text>Midi Output Device Config</text>\r\n            <Select\r\n              className=\"sidebarItem\"\r\n              options={this.prepSelectConfig(deviceConfigs, \"keymap\")}\r\n              autosize={true}\r\n              value={\r\n                this.state.outputConfigName !== undefined\r\n                  ? {\r\n                      label: this.state.outputConfigName,\r\n                      value: this.state.outputConfig,\r\n                    }\r\n                  : { label: \"Output Device Config\", value: undefined }\r\n              }\r\n              onChange={this.setOutputConfig.bind(this)}\r\n            />\r\n            <div />\r\n            <AutoplayControl autoplay={this.state.projectFile === undefined ? undefined : this.state.projectFile.autoplay} canvas={this.canvas} layoutConfig={this.state.layoutConfig}/>\r\n          </div>\r\n            <Canvas\r\n              ref={this.canvas}\r\n              projectFile={this.state.projectFile}\r\n              layoutConfig={this.state.layoutConfig}\r\n              inputDevice={this.state.inputDevice}\r\n              inputConfig={this.state.inputConfig}\r\n              outputDevice={this.state.outputDevice}\r\n              outputConfig={this.state.outputConfig}\r\n            />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  setLayoutConfig(config) {\r\n    // console.log(config)\r\n    this.setState({ layoutConfigName: config.label });\r\n    this.setState({ layoutConfig: config.value });\r\n  }\r\n\r\n  setInputConfig(config) {\r\n    // console.log(config)\r\n    this.setState({ inputConfigName: config.label });\r\n    this.setState({ inputConfig: config.value }, this.initlizateInputDevice.bind(this));\r\n  }\r\n\r\n  setOutputConfig(config) {\r\n    // console.log(config)\r\n    this.setState({ outputConfigName: config.label });\r\n    this.setState({ outputConfig: config.value }, this.initlizateOutputDevice.bind(this));\r\n  }\r\n\r\n  setInputDevice(device) {\r\n    this.setState({ inputDevice: device.value });\r\n    this.autoConfigPicker(device.value.name, 0);\r\n  }\r\n\r\n  setOutputDevice(device) {\r\n    // console.log(\"Output device set to \" + device.name);\r\n    console.log(device)\r\n    this.setState({ outputDevice: device.value });\r\n    this.autoConfigPicker(device.value.name, 1);\r\n  }\r\n\r\n  initlizateInputDevice()\r\n  {\r\n    if(this.state.inputConfig !== undefined && this.state.inputDevice !== undefined)\r\n    {\r\n      if(this.state.inputConfig.inputInfoMessage !== undefined)\r\n      {\r\n        for(var i in this.state.inputConfig.infoMessage)\r\n        {\r\n          alert(this.state.inputConfig.inputInfoMessage[i])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  initlizateOutputDevice()\r\n  {\r\n    //Sysex\r\n    if(this.state.outputConfig !== undefined && this.state.outputDevice !== undefined)\r\n    {\r\n      if(this.state.outputConfig.initializationSysex !== undefined)\r\n      {\r\n        for(var i in this.state.outputConfig.initializationSysex)\r\n        {\r\n          this.state.outputDevice.sendSysex([], this.state.outputConfig.initializationSysex[i])\r\n        }\r\n      }\r\n      if(this.state.outputConfig.outputInfoMessage !== undefined)\r\n      {\r\n        for(var i in this.state.outputConfig.infoMessage)\r\n        {\r\n          alert(this.state.outputConfig.outputInfoMessage[i])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  prepSelectConfig(config, requiredKey = undefined) {\r\n    var result = [];\r\n    for (var key in config) {\r\n      if (requiredKey === undefined || config[key][requiredKey] !== undefined) {\r\n        result.push({\r\n          label: key,\r\n          value: config[key],\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getCookie() {\r\n    return document.cookie.split('; ').reduce((prev, current) => {\r\n      const [name, value] = current.split('=');\r\n      prev[name] = value;\r\n      return prev\r\n    }, {});\r\n  }\r\n\r\n  updateCookie() {\r\n    this.JSON.stringify(this.cookie);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\deviceConfigs.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"const deviceConfigs = {\r\n  \"Launchpad Pro\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"Launchpad Pro\", //For some reason mine shows up as \"3- Launchpad Pro\"\r\n\r\n    initializationSysex:[\r\n      [0, 32, 41, 2, 16, 33, 0], //Enter Live Mode\r\n      [0, 32, 41, 2, 16, 14, 0], //Clear canvas\r\n      [0, 32, 41, 2, 16, 10, 99, 0], //Turn off Mode light\r\n    ],\r\n\r\n    // inputInfoMessage:[\r\n    //   \"Hello\",\r\n    //   \"World\",\r\n    // ],\r\n\r\n    // outputInfoMessage:[\r\n    //   \"Hello\",\r\n    //   \"World\",\r\n    // ],\r\n\r\n    layout: [\r\n      [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"◻\"]],\r\n\r\n    keymap: [\r\n      [null, 91, 92, 93, 94, 95, 96, 97, 98, null],\r\n      [80, 81, 82, 83, 84, 85, 86, 87, 88, 89],\r\n      [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],\r\n      [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],\r\n      [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],\r\n      [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\r\n      [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],\r\n      [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],\r\n      [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\r\n      [null, 1, 2, 3, 4, 5, 6, 7, 8, \"X99\"]],\r\n\r\n    //Size of LED since sometimes Key can come without LED. We don't really need them since we can load the size of layout array\r\n    width: 10,\r\n    height: 10,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 15,\r\n\r\n    canvas_origin: [1, 1],\r\n\r\n    chainKey: [[9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8],\r\n    [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [3, 9], [2, 9], [1, 9],\r\n    [0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1]],\r\n\r\n    mcTable: [\r\n      [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\r\n      [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8],\r\n      [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [3, 9], [2, 9], [1, 9],\r\n      [0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1]],\r\n\r\n    lKey: [9, 9],\r\n\r\n    hexSysexGen: function () {\r\n      if (arguments.length != 2 && arguments.length != 3)\r\n        return [] //Error\r\n      switch (arguments.length) {\r\n        case 2: //ID\r\n          var id = arguments[0]\r\n          var hex = arguments[1]\r\n          break;\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var id = x * 10 + y\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return []\r\n      }\r\n      if (typeof (hex) === \"string\" && hex.charAt(0) === '#') {\r\n        hex = parseInt(hex.substr(1), 16)\r\n      }\r\n      else {\r\n        return []\r\n      }\r\n      var r = (hex >> 16) >> 2 //6 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 2\r\n      var b = (hex & 0xFF) >> 2\r\n      return [0, 32, 41, 2, 16, 11, id, r, g, b]\r\n    }\r\n  },\r\n  \"Launchpad Pro (CFW)\":\r\n  {\r\n    channel: 16,\r\n    midiNameRegex: \"Launchpad Open\", //For some reason mine shows up as \"3- Launchpad Pro\"\r\n\r\n    // layout: [\r\n    //   [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"]],\r\n\r\n    keymap: [\r\n      [null, 28, 29, 30, 31, 32, 33, 34, 35, null],\r\n      [108, 64, 65, 66, 67, 96, 97, 98, 99, 100],\r\n      [109, 60, 61, 62, 63, 92, 93, 94, 95, 101],\r\n      [110, 56, 57, 58, 59, 88, 89, 90, 91, 102],\r\n      [111, 52, 53, 54, 55, 84, 85, 86, 87, 103],\r\n      [112, 48, 49, 50, 51, 80, 81, 82, 83, 104],\r\n      [113, 44, 45, 46, 47, 76, 77, 78, 79, 105],\r\n      [114, 40, 41, 42, 43, 72, 73, 74, 75, 106],\r\n      [115, 36, 37, 38, 39, 68, 69, 70, 71, 107],\r\n      [null, 116, 117, 118, 119, 120, 121, 122, 123, null]],\r\n\r\n    //Size of LED since sometimes Key can come without LED. We don't really need them since we can load the size of layout array\r\n    width: 10,\r\n    height: 10,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 15,\r\n\r\n    canvas_origin: [1, 1],\r\n\r\n    chainKey: [[9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8],\r\n    [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [3, 9], [2, 9], [1, 9],\r\n    [0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1]],\r\n\r\n    mcTable: [\r\n      [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\r\n      [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8],\r\n      [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [3, 9], [2, 9], [1, 9],\r\n      [0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1]],\r\n\r\n    hexSysexGen: function (x, y, hex) {\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 2 //6 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 2\r\n      var b = (hex & 0xFF) >> 2\r\n      return [0, 32, 41, 2, 24, 11, xy, r, g, b]\r\n    }\r\n\r\n    // hexSysexGen: function()\r\n    // {\r\n    //   if(arguments.length != 2 && arguments.length != 3)\r\n    //     return //Error\r\n    //   switch(arguments.length)\r\n    //   {\r\n    //     case 2: //ID\r\n    //       var id = arguments[0]\r\n    //       var hex = arguments[1]\r\n    //       break;\r\n    //     case 3: //XY\r\n    //       var x = arguments[0] + 1\r\n    //       var y = arguments[1] + 1\r\n    //       var id = x * 10 + y\r\n    //       var hex = arguments[2]\r\n    //       break;\r\n    //     default:\r\n    //       return\r\n    //   }\r\n    //   var r = (hex >> 16) >> 2 //6 bit color\r\n    //   var g = (hex & 0xFF00 >> 8) >> 2\r\n    //   var b = (hex & 0xFF) >> 2\r\n    //   return [0, 32, 41, 2, 24, 11, id, r, g, b]\r\n    // }\r\n  },\r\n  \"Launchpad MK2\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad MK2\",\r\n\r\n    layout: [\r\n      [\"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"]],\r\n\r\n    keymap: [\r\n      [\"C104\", \"C105\", \"C106\", \"C107\", \"C108\", \"C109\", \"C110\", \"C111\", null],\r\n      [81, 82, 83, 84, 85, 86, 87, 88, 89],\r\n      [71, 72, 73, 74, 75, 76, 77, 78, 79],\r\n      [61, 62, 63, 64, 65, 66, 67, 68, 69],\r\n      [51, 52, 53, 54, 55, 56, 57, 58, 59],\r\n      [41, 42, 43, 44, 45, 46, 47, 48, 49],\r\n      [31, 32, 33, 34, 35, 36, 37, 38, 39],\r\n      [21, 22, 23, 24, 25, 26, 27, 28, 29],\r\n      [11, 12, 13, 14, 15, 16, 17, 18, 19]],\r\n\r\n    width: 9,\r\n    height: 9,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 15,\r\n\r\n    canvas_origin: [0, 1],\r\n\r\n    chainKey: [[8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8]],\r\n\r\n    mcTable: [\r\n      [0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0],\r\n      [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8],\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,],\r\n\r\n    hexSysexGen: function (x, y, hex) {\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 2 //6 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 2\r\n      var b = (hex & 0xFF) >> 2\r\n      return [0, 32, 41, 2, 24, 11, xy, r, g, b]\r\n    }\r\n  },\r\n  \"Launchpad X\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad X\",\r\n\r\n    // layout: [\r\n    //   [\"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"]],\r\n\r\n    keymap: [\r\n      [28, 29, 30, 31, 32, 33, 34, 35, 27],\r\n      [64, 65, 66, 67, 96, 97, 98, 99, 100],\r\n      [60, 61, 62, 63, 92, 93, 94, 95, 101],\r\n      [56, 57, 58, 59, 88, 89, 90, 91, 102],\r\n      [52, 53, 54, 55, 84, 85, 86, 87, 103],\r\n      [48, 49, 50, 51, 80, 81, 82, 83, 104],\r\n      [44, 45, 46, 47, 76, 77, 78, 79, 105],\r\n      [40, 41, 42, 43, 72, 73, 74, 75, 106],\r\n      [36, 37, 38, 39, 68, 69, 70, 71, 107]],\r\n\r\n    width: 9,\r\n    height: 9,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 5,\r\n\r\n    canvas_origin: [0, 1],\r\n\r\n    chainKey: [[8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8]],\r\n\r\n    mcTable: [\r\n      [0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0],\r\n      [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8],\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,],\r\n\r\n    hexSysexGen: function () {\r\n      if (arguments.length != 2 && arguments.length != 3)\r\n        return //Error\r\n      switch (arguments.length) {\r\n        case 2: //MC\r\n          var mc = arguments[0]\r\n          if (this.mcTable[mc] == null)\r\n            return\r\n          var x, y = this.mcTable[mc]\r\n          var hex = arguments[1]\r\n          break;\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 1 //7 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 1\r\n      var b = (hex & 0xFF) >> 1\r\n      return [240, 0, 32, 41, 2, 12, 22, 3, 3, xy, r, g, b, 247]\r\n    }\r\n  },\r\n  \"Launchpad Pro MK3\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad Pro MK3\",\r\n\r\n    // layout: [\r\n    //   [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n    //   [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"]],\r\n\r\n    keymap: [\r\n      [26, 28, 29, 30, 31, 32, 33, 34, 35, 27],\r\n      [108, 64, 65, 66, 67, 96, 97, 98, 99, 100],\r\n      [109, 60, 61, 62, 63, 92, 93, 94, 95, 101],\r\n      [110, 56, 57, 58, 59, 88, 89, 90, 91, 102],\r\n      [111, 52, 53, 54, 55, 84, 85, 86, 87, 103],\r\n      [112, 48, 49, 50, 51, 80, 81, 82, 83, 104],\r\n      [113, 44, 45, 46, 47, 76, 77, 78, 79, 105],\r\n      [114, 40, 41, 42, 43, 72, 73, 74, 75, 106],\r\n      [115, 36, 37, 38, 39, 68, 69, 70, 71, 107],\r\n      [null, 116, 117, 118, 119, 120, 121, 122, 123, null]],\r\n\r\n    //Size of LED since sometimes Key can come without LED. We don't really need them since we can load the size of layout array\r\n    width: 10,\r\n    height: 10,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 5,\r\n\r\n    canvas_origin: [1, 1],\r\n\r\n    chainKey: [[9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8]],\r\n\r\n    mcTable: [\r\n      [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\r\n      [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8],\r\n      [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [3, 9], [2, 9], [1, 9],\r\n      [0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1]],\r\n\r\n    hexSysexGen: function () {\r\n      return\r\n      if (arguments.length != 2 && arguments.length != 3)\r\n        return //Error\r\n      switch (arguments.length) {\r\n        case 2: //MC\r\n          var mc = arguments[0]\r\n          if (this.mcTable[mc] == null)\r\n            return\r\n          var x, y = this.mcTable[mc]\r\n          var hex = arguments[1]\r\n          break;\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 1 //7 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 1\r\n      var b = (hex & 0xFF) >> 1\r\n      return [240, 0, 32, 41, 2, 12, 22, 3, 3, xy, r, g, b, 247]\r\n    }\r\n  },\r\n  \"Matrix\":\r\n  {\r\n    channel: 2,\r\n    midiNameRegex: \"^Matrix\",\r\n\r\n    layout: [\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"]],\r\n\r\n    keymap: [\r\n      [64, 65, 66, 67, 96, 97, 98, 99],\r\n      [60, 61, 62, 63, 92, 93, 94, 95],\r\n      [56, 57, 58, 59, 88, 89, 90, 91],\r\n      [52, 53, 54, 55, 84, 85, 86, 87],\r\n      [48, 49, 50, 51, 80, 81, 82, 83],\r\n      [44, 45, 46, 47, 76, 77, 78, 79],\r\n      [40, 41, 42, 43, 72, 73, 74, 75],\r\n      [36, 37, 38, 39, 68, 69, 70, 71],\r\n      [100, 101, 102, 103, 104, 105, 106, 107]],\r\n\r\n    width: 8,\r\n    height: 8,\r\n\r\n    //UI related\r\n    padding: 20,\r\n    radius: 15,\r\n\r\n    canvas_origin: [0, 0],\r\n\r\n    chainKey: [[0, 8], [1, 8], [2, 8], [3, 8], [4, 8], [5, 8], [6, 8], [7, 8]],\r\n\r\n    mcTable: [\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,],\r\n\r\n    hexSysexGen: function () {\r\n      if (arguments.length != 3)\r\n        return //Error\r\n      switch (arguments.length) {\r\n        // case 2: //MC\r\n        //   var mc = arguments[0]\r\n        //   if(this.mcTable[mc] == null)\r\n        //     return\r\n        //   var x,y = this.mcTable[mc]\r\n        //   var hex = arguments[1]\r\n        case 3: //XY\r\n          var x = arguments[0]\r\n          var y = arguments[1]\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      var r = (hex >> 16) >> 1 //7 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 1\r\n      var b = (hex & 0xFF) >> 1\r\n      return [240, 0, 2, 3, 1, 0, 18, 32, 0, 3, r, g, b, 247]\r\n    }\r\n  },\r\n}\r\n\r\nexport default deviceConfigs;","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\ProjectFileReader.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Button.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Canvas.jsx",["105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { Component } from \"react\";\r\n// import ProjectFileReader from './Components/projectFileReader';\r\nimport Button from \"./Button\";\r\nimport { palette, rawPalette } from \"../palette\";\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    setInterval(() => {\r\n      this.setState({ colormap: this.state.colormap });\r\n    }, 1000 / 60);\r\n  }\r\n\r\n  state = {\r\n    colormap: new Array(this.props.layoutConfig.width).fill(null).map(() => new Array(this.props.layoutConfig.height).fill(palette[0])),\r\n  };\r\n\r\n  keypressHistory = new Array(this.props.layoutConfig.width).fill(null).map(() => new Array(this.props.layoutConfig.height).fill(0));\r\n  currentChain = 0;\r\n  // overlay = \"#808080\";\r\n\r\n  // shouldUpdate = (nextProps) => !Object.is(this.props.layoutConfig, nextProps.layoutConfig);\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    // if (nextProps.projectFile !== this.props.projectFile) {\r\n    //   console.log(\"Project File Loaded\")\r\n    //   this.initlalizeCanvas(undefined, nextProps.projectFile);\r\n    // }\r\n\r\n    if (nextProps.layoutConfig !== this.props.layoutConfig) {\r\n      this.initlalizeCanvas(nextProps.layoutConfig);\r\n    }\r\n\r\n    if (\r\n      nextProps.inputDevice !==\r\n      this.props.inputDevice /* || prevProps.inputConfig !== this.props.inputConfig */\r\n    ) {\r\n      this.setupMidiInput(nextProps.inputDevice, this.props.inputDevice);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  initlalizeCanvas(\r\n    config = this.props.layoutConfig,\r\n    projectFile = this.props.projectFile\r\n  ) {\r\n    this.clearCanvas(config);\r\n    this.clearKeypressHistory(config);\r\n    this.currentChain = 0;\r\n  }\r\n\r\n  clearCanvas(config = this.props.layoutConfig) {\r\n    this.state.colormap = new Array(config.width).fill(null).map(() => new Array(config.height).fill(palette[0])); //I write directly into state because that takes so long it will be complete by the time render is over and throw an error already. Since shouldComponentUpdate will enforce update I will give it a pass\r\n  }\r\n\r\n  clearKeypressHistory(config = this.props.layoutConfig) {\r\n    this.keypressHistory = new Array(config.width).fill(null).map(() => new Array(config.height).fill(0));\r\n  }\r\n\r\n  setupMidiInput(newInput, oldInput) {\r\n    // console.log([newInput, oldInput])\r\n    if (oldInput !== undefined) oldInput.removeListener();\r\n    if (newInput !== undefined) newInput.addListener(\"midimessage\", \"all\", this.midiInputHandler.bind(this));\r\n  }\r\n\r\n  midiInputHandler = (midiMessage) => {\r\n    console.log(midiMessage);\r\n    let [x, y] = this.indexOf2dArray(\r\n      midiMessage.data[1],\r\n      this.props.inputConfig.keymap\r\n    );\r\n    console.log([x, y]);\r\n    if (x !== NaN && y !== NaN) {\r\n      // let [offseted_x, offseted_y] = this.arrayCalculation([x, y], this.props.inputConfig.canvas_origin, \"-\");\r\n      switch (midiMessage.data[0] >> 4) {\r\n        case 9: //Note On\r\n          if (midiMessage.data[2] != 0) {\r\n            //Fall back to note of\r\n            this.keyOn(x, y, this.props.inputConfig);\r\n            break;\r\n          }\r\n        case 8: //Note Off\r\n          this.keyOff(x, y, this.props.inputConfig);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  keyOn = (x, y, config = this.props.layoutConfig, bypassOffset = false) => {\r\n    let targetChain = undefined;\r\n    let soundLoop = 1\r\n    console.log(\"Note On - \" + x.toString() + \" \" + y.toString());\r\n\r\n    let [offseted_x, offseted_y] = [x, y];\r\n    if (!bypassOffset) {\r\n      [offseted_x, offseted_y] = this.arrayCalculation(\r\n        [x, y],\r\n        config.canvas_origin,\r\n        \"-\"\r\n      );\r\n    }\r\n    // console.log([x, y, offseted_x, offseted_y])\r\n\r\n    if (this.props.projectFile !== undefined) {\r\n      //Sound\r\n      if (\r\n        this.props.projectFile.keySound !== undefined &&\r\n        this.props.projectFile.keySound[this.currentChain] !== undefined &&\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x] !== undefined &&\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y] !== undefined &&\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y].length > 0\r\n      ) {\r\n        let soundIndex =\r\n          this.keypressHistory[x][y] %\r\n          this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y].length;\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][0].loop = false;\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][0].stop();\r\n        // console.log('Play sound ${this.currentChain} ${offseted_x}')\r\n        if (\r\n          this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][1] !== undefined\r\n        ) {\r\n          if (  \r\n            // Loop\r\n            this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][1][0] !== undefined\r\n          ) {\r\n            soundLoop = parseInt(this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][1][0])\r\n          }\r\n\r\n          if (\r\n            this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][1][1] !== undefined\r\n          ) {\r\n            //Wormhole\r\n            \r\n            targetChain = parseInt(this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][1][1]) - 1;\r\n            console.log(`Wormhole to Chain ${targetChain}`)\r\n          }\r\n        }\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex][0].play(soundLoop);\r\n      }\r\n\r\n      //LED\r\n      if (\r\n        this.props.projectFile.keyLED !== undefined &&\r\n        this.props.projectFile.keyLED[this.currentChain] !== undefined &&\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x] !== undefined &&\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y] !== undefined &&\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y].length > 0\r\n      ) {\r\n        let ledIndex = this.keypressHistory[x][y] % this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y].length;\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y][ledIndex].stop();\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y][ledIndex].play();\r\n      }\r\n\r\n      //Update History\r\n      if (\r\n        this.keypressHistory[x] != undefined &&\r\n        this.keypressHistory[x][y] != undefined\r\n      )\r\n        this.keypressHistory[x][y]++;\r\n\r\n      //Chain Change\r\n      if (targetChain === undefined) {\r\n        this.checkChain(x, y, config);\r\n      } else {\r\n        this.chainChange(targetChain);\r\n      }\r\n    }\r\n  };\r\n\r\n  checkChain = (x, y, config) => {\r\n    for (\r\n      var i = 0;\r\n      i < Math.min(config.chainKey.length, this.props.projectFile.info.chain);\r\n      i++\r\n    ) {\r\n      if (config.chainKey[i][0] === x && config.chainKey[i][1] === y)\r\n        this.chainChange(i);\r\n    }\r\n  };\r\n\r\n  keyOff = (x, y, config = this.props.layoutConfig, bypassOffset = false) => {\r\n    console.log(\"Note Off - \" + x.toString() + \" \" + y.toString());\r\n\r\n    let [offseted_x, offseted_y] = [x, y];\r\n    if (!bypassOffset) {\r\n      [offseted_x, offseted_y] = this.arrayCalculation(\r\n        [x, y],\r\n        config.canvas_origin,\r\n        \"-\"\r\n      );\r\n    }\r\n    if (this.props.projectFile !== undefined) {\r\n    //LED\r\n    if (\r\n      this.props.projectFile.keyLED !== undefined &&\r\n      this.props.projectFile.keyLED[this.currentChain] !== undefined &&\r\n      this.props.projectFile.keyLED[this.currentChain][offseted_x] !== undefined &&\r\n      this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y] !== undefined &&\r\n      this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y].length > 0\r\n    ) {\r\n      let ledIndex = (this.keypressHistory[x][y] - 1) % this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y].length;\r\n      if(this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y][ledIndex].repeat === 0)\r\n      {\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y][ledIndex].stop();\r\n      }\r\n    }\r\n  }\r\n    };\r\n\r\n  chainChange = (chain) => {\r\n    console.log(\"Chain Changed to \" + (chain + 1));\r\n    if (chain !== this.currentChain) this.clearKeypressHistory();\r\n    this.currentChain = chain;\r\n  };\r\n\r\n  setColor = (x, y, color) => {\r\n    // console.log(`Set Color ${x} ${y} ${color}`)\r\n    this.setColorCanvas(x, y, color);\r\n    this.setColorOutput(x, y, color);\r\n  };\r\n\r\n  setColorCanvas(x, y, color) {\r\n    var [canvas_x, canvas_y] = [undefined, undefined]\r\n    if (x === \"l\") {\r\n      [canvas_x, canvas_y] = this.props.layoutConfig.lKey;\r\n    } else if (x === \"mc\") {\r\n      if(this.props.layoutConfig.mcTable[y] == null)\r\n        return\r\n      [canvas_x, canvas_y] = this.props.layoutConfig.mcTable[y];\r\n    } else {\r\n      [canvas_x, canvas_y] = this.arrayCalculation(\r\n        [x, y],\r\n        this.props.layoutConfig.canvas_origin,\r\n        \"+\"\r\n      );\r\n    }\r\n\r\n    if (/^#[0-9A-F]{6}$/i.test(color)) { //Check if it is a Hex String\r\n      this.state.colormap[canvas_x][canvas_y] = color;\r\n    } else {\r\n      this.state.colormap[canvas_x][canvas_y] = palette[color];\r\n    }\r\n  }\r\n\r\n  setColorOutput(x, y, color) {\r\n    if (\r\n      this.props.outputDevice !== undefined &&\r\n      this.props.outputConfig !== undefined\r\n    ) {\r\n      var [output_x, output_y] = [undefined, undefined]\r\n      if (x === \"l\") {\r\n        [output_x, output_y] = this.props.outputConfig.lKey;\r\n      } else if (x === \"mc\") {\r\n        if(this.props.outputConfig.mcTable[y] == null)\r\n          return\r\n        [output_x, output_y] = this.props.outputConfig.mcTable[y];\r\n      } else {\r\n        [output_x, output_y] = this.arrayCalculation(\r\n          [x, y],\r\n          this.props.outputConfig.canvas_origin,\r\n          \"+\"\r\n        );\r\n      }\r\n\r\n      if (/^#[0-9A-F]{6}$/i.test(color)) { //Check if it is a Hex String\r\n        this.sendSysex(\r\n          this.props.outputConfig.hexSysexGen(output_y, output_x, color)\r\n        );\r\n      } else {\r\n        this.sendMidi(\r\n          \"NoteOn\",\r\n          this.props.outputConfig.channel,\r\n          this.props.outputConfig.keymap[output_y][output_x],\r\n          color\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  sendMidi(mode, channel, note, value = 0) {\r\n    if (typeof note === \"string\") {\r\n      let modeKey = note.charAt(0);\r\n      note = parseInt(note.substr(1));\r\n      switch (modeKey) {\r\n        case \"C\":\r\n          mode = \"CC\";\r\n          break;\r\n        case \"X\":\r\n          mode = \"HEX\";\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n    switch (mode) {\r\n      case \"NoteOn\":\r\n        this.props.outputDevice.send(0x90 + channel - 1, [note, value]);\r\n        break;\r\n      case \"NoteOff\":\r\n        this.props.outputDevice.send(0x80 + channel - 1, [note, value]);\r\n        break;\r\n      case \"CC\":\r\n        this.props.outputDevice.send(0xb0 + channel - 1, [note, value]);\r\n        break;\r\n      case \"HEX\":\r\n        this.sendSysex(\r\n          this.props.outputConfig.hexSysexGen(note, rawPalette[value])\r\n        );\r\n        break;\r\n    }\r\n  }\r\n\r\n  sendSysex(message) {\r\n    // console.log(message)\r\n    this.props.outputDevice.sendSysex([], message);\r\n  }\r\n\r\n  // // Overlays a color\r\n  // colorOverlay = (hex, overlay) => {\r\n  //   let [r, g, b] = this.toRGB(hex)\r\n  //   let [r0, g0, b0] = this.toRGB(overlay)\r\n  //   r = Math.round(r * (255 - r0) / 255 + r0);\r\n  //   g = Math.round(g * (255 - g0) / 255 + g0);\r\n  //   b = Math.round(b * (255 - b0) / 255 + b0);\r\n  //   return this.toHEX(r, g, b)\r\n  // }\r\n\r\n  // // Converts a CHAD HEX color to a beta RGB color\r\n  // toRGB = (hex) => {\r\n  //   const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n  //   return [parseInt(result[1], 16),\r\n  //           parseInt(result[2], 16),\r\n  //           parseInt(result[3], 16)]\r\n  // }\r\n\r\n  // // Converts a beta RGB color to a CHAD HEX color\r\n  // toHEX = (r, g, b) => '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b)\r\n\r\n  // // Converts the value of a given component to CHAD HEX\r\n  // componentToHex = (component) => {\r\n  //   const hex = component.toString(16)\r\n  //   return hex.length === 1 ? '0' + hex : hex\r\n  // }\r\n\r\n  arrayCalculation = (array1, array2, operation) => {\r\n    let newArray = [];\r\n    if (array1.length === array2.length) {\r\n      switch (operation) {\r\n        case \"+\":\r\n          for (var i = 0; i < array1.length; i++) {\r\n            newArray.push(array1[i] + array2[i]);\r\n          }\r\n          return newArray;\r\n        case \"-\":\r\n          for (var i = 0; i < array1.length; i++) {\r\n            newArray.push(array1[i] - array2[i]);\r\n          }\r\n          return newArray;\r\n      }\r\n    }\r\n  };\r\n\r\n  indexOf2dArray(id, matrix) {\r\n    for (var y = 0, len = matrix.length; y < len; y++) {\r\n      for (var x = 0, len2 = matrix[y].length; x < len2; x++) {\r\n        if (matrix[y][x] === id) {\r\n          return [x, y];\r\n        }\r\n      }\r\n    }\r\n    return [NaN, NaN];\r\n  }\r\n\r\n  stopKeyLED() {\r\n    for (var chain = 0; chain < this.props.projectFile.info.chain; chain++) {\r\n      for (\r\n        var x = 0;\r\n        chain < this.props.projectFile.keyLED[chain].length;\r\n        x++\r\n      ) {\r\n        for (\r\n          var y = 0;\r\n          chain < this.props.projectFile.keyLED[chain][x].length;\r\n          y++\r\n        ) {\r\n          for (\r\n            var index = 0;\r\n            chain < this.props.projectFile.keyLED[chain][x][y].length;\r\n            index++\r\n          ) {\r\n            if (\r\n              this.props.projectFile.keyLED[chain][x][y][index] !== undefined\r\n            ) {\r\n              this.props.projectFile.keyLED[chain][x][y][index].stop();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  stopKeySound() {\r\n    for (var chain = 0; chain < this.props.projectFile.info.chain; chain++) {\r\n      for (\r\n        var x = 0;\r\n        chain < this.props.projectFile.keySound[chain].length;\r\n        x++\r\n      ) {\r\n        for (\r\n          var y = 0;\r\n          chain < this.props.projectFile.keySound[chain][x].length;\r\n          y++\r\n        ) {\r\n          for (\r\n            var index = 0;\r\n            chain < this.props.projectFile.keySound[chain][x][y].length;\r\n            index++\r\n          ) {\r\n            this.props.projectFile.keySound[chain][x][y][index].stop();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  stopAll() {\r\n    // this.stopKeyLED()\r\n    // this.stopKeySound()\r\n    // this.clearCanvas()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"canvas\"\r\n        style={{\r\n          padding: this.props.layoutConfig.padding,\r\n          borderRadius: this.props.layoutConfig.radius,\r\n        }}\r\n      >\r\n        {this.props.layoutConfig.layout.map((value, y) => {\r\n          return (\r\n            <div className=\"button-row\">\r\n              {this.props.layoutConfig.layout[y].map((value, x) => {\r\n                switch (value) {\r\n                  case \"◻\":\r\n                    return (\r\n                      <Button\r\n                        x={x}\r\n                        y={y}\r\n                        class=\"LEDButtonSquare\"\r\n                        color={this.state.colormap[x][y]}\r\n                        on={this.keyOn}\r\n                        off={this.keyOff}\r\n                      />\r\n                    );\r\n                  case \"⬤\":\r\n                    return (\r\n                      <Button\r\n                        x={x}\r\n                        y={y}\r\n                        class=\"LEDButtonCircle75\"\r\n                        color={this.state.colormap[x][y]}\r\n                        on={this.keyOn}\r\n                        off={this.keyOff}\r\n                      />\r\n                    );\r\n                  case \"◪\":\r\n                  case \"⬕\":\r\n                  case \"⬔\":\r\n                  case \"◩\":\r\n                    return (\r\n                      <Button\r\n                        x={x}\r\n                        y={y}\r\n                        class=\"LEDButtonSquare\"\r\n                        color={this.state.colormap[x][y]}\r\n                        on={this.keyOn}\r\n                        off={this.keyOff}\r\n                      />\r\n                    );\r\n                  default:\r\n                    return (\r\n                      <div\r\n                        key={\"Spacer \" + x.toString() + \"-\" + y.toString()}\r\n                        style={{\r\n                          width: \"96px\",\r\n                        }}\r\n                      ></div>\r\n                    );\r\n                }\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n        {/* <button onClick={this.playAutoplay}>Auto Play</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\palette.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\projectFile.js",["118","119"],"import KeyLED from \"./keyLED\"\r\nimport AutoPlay from \"./autoPlay\"\r\nimport keySound from './keySound';\r\n\r\nclass ProjectFile {\r\n  info = {};\r\n  soundFiles = {};\r\n  keySound = undefined;\r\n  autoplay = undefined;\r\n  keyLED = undefined;\r\n  canvas = undefined\r\n\r\n  constructor(file, canvas) {\r\n    this.canvas = canvas.current;\r\n    return this.unpack(file);\r\n  }\r\n\r\n  unpack(projectFile) {\r\n    return new Promise(async (resolve, reject) => {\r\n      console.log(this.info)\r\n      let JSZip = require(\"jszip\");\r\n      let files = await JSZip.loadAsync(projectFile).then(function (zip) {\r\n        return Object.values(zip.files)\r\n      }, function (e) {\r\n        reject(\"Failed to extract selected file\");\r\n        console.log(e);\r\n        return;\r\n      });\r\n      let projectRoot = undefined;\r\n      let keySoundFile = undefined;\r\n      let autoplayFile = undefined;\r\n      let keyLEDFiles = {};\r\n\r\n      //Load info and categorize files\r\n      for (let file of files) {\r\n        if (!file.name.endsWith(\"/\")) //Ignore folder\r\n        {\r\n          if (file.name.toLowerCase().includes(\"sounds/\")) //Audio\r\n          {\r\n            console.log(\"Sound file: \" + file.name);\r\n            this.soundFiles[file.name.split(\"/\").pop()] = await file.async(\"blob\").then(function (blob) {\r\n              return new keySound(blob, file.name.split(\"/\").pop())\r\n            });\r\n          }\r\n          else {\r\n            let text = await file.async(\"text\").then((text) => { return text = text.split(/\\r?\\n/); });\r\n            if (file.name.toLowerCase().endsWith(\"info\")) //Text\r\n            {\r\n              console.log(\"Info file: \" + file.name);\r\n              projectRoot = file.name.slice(0, -4);\r\n              console.log(\" project root: \" + projectRoot);\r\n              text.forEach(info => this.info[info.split('=')[0]] = info.split('=')[1]);\r\n              this.info[\"buttonX\"] = parseInt(this.info[\"buttonX\"]);\r\n              this.info[\"buttonY\"] = parseInt(this.info[\"buttonY\"]);\r\n              this.info[\"chain\"] = parseInt(this.info[\"chain\"]);\r\n              this.info[\"squareButton\"] = this.info[\"squareButton\"] === \"true\";\r\n              this.info[\"landscape\"] = this.info[\"landscape\"] === \"true\";\r\n              console.log(\" title: \" + this.info[\"title\"])\r\n              console.log(\" producerName: \" + this.info[\"producerName\"])\r\n              console.log(\" buttonX: \" + this.info[\"buttonX\"])\r\n              console.log(\" buttonY: \" + this.info[\"buttonY\"])\r\n              console.log(\" chain: \" + this.info[\"chain\"])\r\n              console.log(\" squareButton: \" + this.info[\"squareButton\"])\r\n              console.log(\" landscape: \" + this.info[\"landscape\"])\r\n              if (this.info[\"buttonX\"] !== 8 || this.info[\"buttonY\"] !== 8) {\r\n                reject(\"Only 8x8 Unipad project are supported\");\r\n                return;\r\n              }\r\n              if (this.info[\"chain\"] > 8) {\r\n                // reject(\"Only Unipad project that has within 8 chains are supported\");\r\n                alert(`This Unipad Project has ${this.info[\"chain\"]} chains. Projects that has more than 8 chains are limited supported`)\r\n                // return;\r\n              }\r\n            }\r\n            else if (file.name.toLowerCase().endsWith(\"keysound\")) {\r\n              console.log(\"KeySound file: \" + file.name);\r\n              keySoundFile = text;\r\n            }\r\n            else if (file.name.toLowerCase().endsWith(\"autoplay\")) {\r\n              console.log(\"AutoPlay file: \" + file.name);\r\n              autoplayFile = text;\r\n            }\r\n            else if (file.name.toLowerCase().includes(\"keyled/\")) {\r\n              console.log(\"KeyLED file: \" + file.name);\r\n              keyLEDFiles[file.name] = text;\r\n            }\r\n            else {\r\n              console.log(\"Unknown file: \" + file.name);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      //Initialize 4D arraies\r\n      this.keySound = new Array(this.info.chain).fill(null).map(\r\n        () => new Array(this.info.buttonX).fill(null).map(\r\n          () => new Array(this.info.buttonY).fill(null).map(\r\n            () => new Array())));\r\n\r\n      this.keyLED = new Array(this.info.chain).fill(null).map(\r\n        () => new Array(this.info.buttonX).fill(null).map(\r\n          () => new Array(this.info.buttonY).fill(null).map(\r\n            () => new Array())));\r\n\r\n      // Load KeyLED\r\n      for (var [name, text] of Object.entries(keyLEDFiles)) {\r\n        let fileInfo = name.split(\"/\").pop().split(\" \");\r\n        // if (fileInfo.length === 5) {\r\n        //   this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1][fileInfo[4].charCodeAt(0) - 97] = new KeyLED(text, parseInt(fileInfo[3]), this.canvas)\r\n        //   // console.log(name)\r\n        //   // console.log([parseInt(fileInfo[0]) - 1, parseInt(fileInfo[2]) - 1, parseInt(fileInfo[1]) - 1, fileInfo[4].charCodeAt(0) - 97])\r\n        //   // console.log(this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1][fileInfo[4].charCodeAt(0) - 97])\r\n        // }\r\n        // else if (fileInfo.length === 4) {\r\n          let index = fileInfo[4] !== undefined ? fileInfo[4].charCodeAt(0) - 97 : 0 //97 is 'a' \r\n          // console.log([parseInt(fileInfo[0]) - 1, parseInt(fileInfo[2]) - 1, parseInt(fileInfo[1]) - 1, index])\r\n          this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1][index] = new KeyLED(text, parseInt(fileInfo[3]), this.canvas)\r\n        // }\r\n        // else {\r\n        //   console.warn(\"Unknown keyLED file name: \" + name);\r\n        // }\r\n      }\r\n\r\n      //Load KeySound\r\n      for (var line of keySoundFile) {\r\n        let command = line.split(\" \");\r\n\r\n        if (command.length < 2) //For empty lines\r\n          continue;\r\n\r\n        // console.log(command);\r\n        this.keySound[parseInt(command[0]) - 1][parseInt(command[2]) - 1][parseInt(command[1]) - 1].push([this.soundFiles[command[3]], command.slice(4)]);\r\n      }\r\n\r\n      //Load AutoPlay\r\n      this.autoplay = new AutoPlay(autoplayFile, this.canvas);\r\n\r\n      resolve(this)\r\n    });\r\n  }\r\n}\r\n\r\nexport default ProjectFile;","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\keyLED.js",["120","121","122","123","124","125","126","127","128","129","130","131","132"],"class KeyLED\r\n{\r\n  keyLED = undefined\r\n  repeat = 1;\r\n  status = {}\r\n  nextIndex = 0\r\n  canvas = undefined\r\n  currentOn=[]\r\n\r\n  constructor(text, repeat, canvas)\r\n  {\r\n    this.keyLED = text;\r\n    this.repeat = repeat;\r\n    this.canvas = canvas\r\n  }\r\n\r\n  play = async() =>\r\n  {\r\n    var threadIndex = this.getIndex()\r\n    this.status[threadIndex] = \"PLAYING\"\r\n    this.currentOn = []\r\n    for(var i = 0; i < (this.repeat === 0 ? Infinity : this.repeat); i++)\r\n    {\r\n      for(var line of this.keyLED)\r\n      {\r\n        let wait_complete = true;\r\n        let command = line.split(\" \");\r\n        // console.log(line)\r\n        if(command.length < 2)\r\n          continue;\r\n        switch(command[0])\r\n        {\r\n          case 'o': //set color\r\n          case 'on': //set color\r\n              if(command[1] === \"mc\" || command[1] === \"l\") //For \"l\", the y is garbage but it won't be read for the setColor functions so just gonna let it be\r\n              {\r\n                [x, y] = [command[1], parseInt(command[2] - 1)]\r\n              }\r\n              else if(parseInt(command[1]) !== NaN)\r\n              {\r\n                [x, y] = [parseInt(command[2] - 1), parseInt(command[1] - 1)]\r\n              }\r\n\r\n              var color\r\n              if(command[command.length - 2] === \"a\")\r\n              {\r\n                color = parseInt(command[command.length - 1])\r\n              }\r\n              else\r\n              {\r\n                color = \"#\" + command[command.length - 1]\r\n              }\r\n\r\n              this.canvas.setColor(x, y, color)\r\n\r\n              var id = x + \"-\" + y\r\n              if(this.currentOn[id] === undefined) \r\n              {\r\n                this.currentOn[id] = [x, y]\r\n              }\r\n              else if(color === 0)\r\n              {\r\n                delete this.currentOn[id]\r\n              }\r\n              break;\r\n          case 'f': //color off\r\n          case 'off': //color off\r\n            var [x, y] = [undefined, undefined]\r\n            if(command[1] === \"mc\" || command[1] === \"l\")\r\n            {\r\n              [x, y] = [command[1], parseInt(command[2] - 1)]\r\n            }\r\n            else if(parseInt(command[1]) !== NaN)\r\n            {\r\n              [x, y] = [parseInt(command[2] - 1), parseInt(command[1] - 1)]\r\n            }\r\n\r\n            this.canvas.setColor(x, y, 0)\r\n            var id = x + \"-\" + y\r\n            delete this.currentOn[id]\r\n            break;\r\n          case 'd': //wait\r\n          case 'delay': \r\n          wait_complete = false;\r\n          this.wait(parseInt(command[1])).then(() => { wait_complete = true });\r\n          // await this.wait(parseInt(command[1]));\r\n          do {\r\n            if (this.status[threadIndex] === \"STOPPED\") {\r\n              // this.progress++;\r\n              delete this.status[threadIndex]\r\n              return;\r\n            }\r\n            await this.wait(5)\r\n          } while (!wait_complete)\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\n    delete this.status[threadIndex]\r\n  }\r\n\r\n  wait(ms)\r\n  {\r\n    return new Promise(resolve => setTimeout(resolve, ms))\r\n  }\r\n\r\n  getIndex()\r\n  {\r\n    return this.nextIndex++;\r\n  }\r\n\r\n  stop()\r\n  {\r\n    for(var index in this.status)\r\n    {\r\n      // console.log(`Thread ${index}`)\r\n      this.status[index] = \"STOPPED\"\r\n    }\r\n    for(var id in this.currentOn)\r\n    {\r\n      var [x,y] = this.currentOn[id]\r\n      this.canvas.setColor(x, y, 0)\r\n    }\r\n    this.currentOn = []\r\n  }\r\n}\r\n\r\nexport default KeyLED;","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\autoPlay.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\config.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Autoplay.jsx",["133","134"],"import React, { Component } from \"react\";\r\n\r\nclass AutoplayControl extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    setInterval(() => {\r\n      if (this.props.autoplay !== undefined) {\r\n        this.forceUpdate();\r\n      }\r\n    }, 1000 / 60);\r\n  }\r\n\r\n  render() {\r\n    var playButton = (\r\n      <button\r\n        style={{ width: \"50px\", marginRight: \"10px\" }}\r\n        onClick={this.playAutoplay}\r\n      >\r\n        Play\r\n      </button>\r\n    );\r\n    var pauseButton = (\r\n      <button\r\n        style={{ width: \"50px\", marginRight: \"10px\" }}\r\n        onClick={this.pauseAutoplay}\r\n      >\r\n        Pause\r\n      </button>\r\n    );\r\n    var stopButton = (\r\n      <button\r\n        style={{ width: \"50px\", marginRight: \"10px\" }}\r\n        onClick={this.stopAutoplay}\r\n      >\r\n        Stop\r\n      </button>\r\n    );\r\n    var buttons = [];\r\n\r\n    var statusText = \"\";\r\n    if (this.props.autoplay == undefined || this.props.autoplay.total === 0)\r\n      return null;\r\n    switch (this.props.autoplay.status) {\r\n      case \"PLAYING\":\r\n        statusText = ` - ${(\r\n          (this.props.autoplay.progress / this.props.autoplay.total) *\r\n          100\r\n        ).toFixed(2)}% completed (${this.props.autoplay.progress}/${\r\n          this.props.autoplay.total\r\n        })`;\r\n        buttons.push(pauseButton);\r\n        break;\r\n      case \"PAUSED\":\r\n        statusText = ` - ${(\r\n          (this.props.autoplay.progress / this.props.autoplay.total) *\r\n          100\r\n        ).toFixed(2)}% completed (${this.props.autoplay.progress}/${\r\n          this.props.autoplay.total\r\n        }) - Paused`;\r\n        buttons.push(playButton, stopButton);\r\n        break;\r\n      case \"STOPPED\":\r\n        buttons.push(playButton);\r\n        break;\r\n    }\r\n    return (\r\n      <div>\r\n        <text>{\"Autoplay\" + statusText}</text>\r\n        <div />\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  playAutoplay = () => {\r\n    if (this.props.autoplay !== undefined) {\r\n      this.props.autoplay.play(\r\n        // this.props.canvas.current,\r\n        // this.props.layoutConfig.canvas_origin\r\n      );\r\n    } else {\r\n      alert(\"No project loaded!\");\r\n    }\r\n  };\r\n\r\n  stopAutoplay = () => {\r\n    if (this.props.autoplay !== undefined) {\r\n      this.props.autoplay.stop();\r\n    } else {\r\n      alert(\"No project loaded!\");\r\n    }\r\n  };\r\n\r\n  pauseAutoplay = () => {\r\n    if (this.props.autoplay !== undefined) {\r\n      this.props.autoplay.pause();\r\n    } else {\r\n      alert(\"No project loaded!\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default AutoplayControl;\r\n","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\keySound.js",["135"],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\howler.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":12,"column":3,"nodeType":"159","messageId":"160","endLine":14,"endColumn":4},{"ruleId":"161","severity":1,"message":"162","line":77,"column":10,"nodeType":"163","messageId":"164","endLine":77,"endColumn":14,"fix":"165"},{"ruleId":"166","severity":1,"message":"167","line":166,"column":11,"nodeType":"168","messageId":"169","endLine":173,"endColumn":12},{"ruleId":"170","severity":1,"message":"171","line":351,"column":17,"nodeType":"172","messageId":"173","endLine":351,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":70,"column":28,"nodeType":"176","messageId":"164","endLine":70,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":70,"column":53,"nodeType":"176","messageId":"164","endLine":70,"endColumn":55},{"ruleId":"170","severity":1,"message":"177","line":80,"column":15,"nodeType":"172","messageId":"173","endLine":80,"endColumn":17},{"ruleId":"170","severity":1,"message":"178","line":81,"column":15,"nodeType":"172","messageId":"173","endLine":81,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":93,"column":20,"nodeType":"176","messageId":"181","endLine":93,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":93,"column":29,"nodeType":"176","messageId":"181","endLine":93,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":150,"column":20,"nodeType":"176","messageId":"181","endLine":150,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":150,"column":29,"nodeType":"176","messageId":"181","endLine":150,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":227,"column":20,"nodeType":"176","messageId":"181","endLine":227,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":227,"column":29,"nodeType":"176","messageId":"181","endLine":227,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":277,"column":28,"nodeType":"176","messageId":"164","endLine":277,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":277,"column":53,"nodeType":"176","messageId":"164","endLine":277,"endColumn":55},{"ruleId":"170","severity":1,"message":"182","line":288,"column":15,"nodeType":"172","messageId":"173","endLine":288,"endColumn":16},{"ruleId":"170","severity":1,"message":"183","line":289,"column":15,"nodeType":"172","messageId":"173","endLine":289,"endColumn":16},{"ruleId":"170","severity":1,"message":"178","line":290,"column":15,"nodeType":"172","messageId":"173","endLine":290,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":297,"column":20,"nodeType":"176","messageId":"181","endLine":297,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":297,"column":29,"nodeType":"176","messageId":"181","endLine":297,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":351,"column":7,"nodeType":"186","messageId":"187","endLine":373,"endColumn":65},{"ruleId":"174","severity":1,"message":"175","line":351,"column":28,"nodeType":"176","messageId":"164","endLine":351,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":351,"column":53,"nodeType":"176","messageId":"164","endLine":351,"endColumn":55},{"ruleId":"170","severity":1,"message":"182","line":362,"column":15,"nodeType":"172","messageId":"173","endLine":362,"endColumn":16},{"ruleId":"170","severity":1,"message":"183","line":363,"column":15,"nodeType":"172","messageId":"173","endLine":363,"endColumn":16},{"ruleId":"170","severity":1,"message":"178","line":364,"column":15,"nodeType":"172","messageId":"173","endLine":364,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":371,"column":20,"nodeType":"176","messageId":"181","endLine":371,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":371,"column":29,"nodeType":"176","messageId":"181","endLine":371,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":420,"column":28,"nodeType":"176","messageId":"164","endLine":420,"endColumn":30},{"ruleId":"188","severity":1,"message":"189","line":430,"column":15,"nodeType":"172","messageId":"190","endLine":430,"endColumn":16},{"ruleId":"188","severity":1,"message":"191","line":431,"column":15,"nodeType":"172","messageId":"190","endLine":431,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":438,"column":20,"nodeType":"176","messageId":"181","endLine":438,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":438,"column":29,"nodeType":"176","messageId":"181","endLine":438,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":54,"column":5,"nodeType":"194","endLine":54,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":74,"column":9,"nodeType":"176","messageId":"197","endLine":74,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":74,"column":22,"nodeType":"176","messageId":"197","endLine":74,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":76,"column":7,"nodeType":"168","messageId":"169","endLine":86,"endColumn":8},{"ruleId":"174","severity":1,"message":"175","line":78,"column":35,"nodeType":"176","messageId":"164","endLine":78,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":83,"column":9,"nodeType":"200","messageId":"201","endLine":85,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":157,"column":33,"nodeType":"176","messageId":"164","endLine":157,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":158,"column":36,"nodeType":"176","messageId":"164","endLine":158,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":240,"column":7,"nodeType":"194","endLine":240,"endColumn":36},{"ruleId":"192","severity":1,"message":"193","line":242,"column":7,"nodeType":"194","endLine":242,"endColumn":36},{"ruleId":"166","severity":1,"message":"167","line":296,"column":5,"nodeType":"168","messageId":"169","endLine":311,"endColumn":6},{"ruleId":"166","severity":1,"message":"167","line":349,"column":7,"nodeType":"168","messageId":"169","endLine":360,"endColumn":8},{"ruleId":"170","severity":1,"message":"171","line":356,"column":20,"nodeType":"172","messageId":"173","endLine":356,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":98,"column":19,"nodeType":"204","messageId":"205","endLine":98,"endColumn":30},{"ruleId":"202","severity":1,"message":"203","line":103,"column":19,"nodeType":"204","messageId":"205","endLine":103,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":37,"column":18,"nodeType":"172","messageId":"208","endLine":37,"endColumn":19},{"ruleId":"206","severity":1,"message":"209","line":37,"column":21,"nodeType":"172","messageId":"208","endLine":37,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":39,"column":23,"nodeType":"176","messageId":"197","endLine":39,"endColumn":51},{"ruleId":"206","severity":1,"message":"207","line":41,"column":18,"nodeType":"172","messageId":"208","endLine":41,"endColumn":19},{"ruleId":"206","severity":1,"message":"209","line":41,"column":21,"nodeType":"172","messageId":"208","endLine":41,"endColumn":22},{"ruleId":"206","severity":1,"message":"207","line":54,"column":36,"nodeType":"172","messageId":"208","endLine":54,"endColumn":37},{"ruleId":"206","severity":1,"message":"209","line":54,"column":39,"nodeType":"172","messageId":"208","endLine":54,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":56,"column":24,"nodeType":"172","messageId":"208","endLine":56,"endColumn":25},{"ruleId":"206","severity":1,"message":"209","line":56,"column":34,"nodeType":"172","messageId":"208","endLine":56,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":59,"column":39,"nodeType":"172","messageId":"208","endLine":59,"endColumn":40},{"ruleId":"206","severity":1,"message":"209","line":59,"column":42,"nodeType":"172","messageId":"208","endLine":59,"endColumn":43},{"ruleId":"195","severity":1,"message":"196","line":73,"column":21,"nodeType":"176","messageId":"197","endLine":73,"endColumn":49},{"ruleId":"170","severity":1,"message":"177","line":79,"column":17,"nodeType":"172","messageId":"173","endLine":79,"endColumn":19},{"ruleId":"174","severity":1,"message":"210","line":41,"column":29,"nodeType":"176","messageId":"164","endLine":41,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":43,"column":5,"nodeType":"168","messageId":"169","endLine":65,"endColumn":6},{"ruleId":"174","severity":1,"message":"210","line":58,"column":26,"nodeType":"176","messageId":"164","endLine":58,"endColumn":28},{"ruleId":"211","severity":1,"message":"212","line":13,"column":3,"nodeType":"213","messageId":"214","endLine":13,"endColumn":16,"fix":"215"},{"ruleId":"216","severity":2,"message":"217","line":200,"column":16,"nodeType":"172","messageId":"218","endLine":200,"endColumn":20},{"ruleId":"216","severity":2,"message":"217","line":204,"column":16,"nodeType":"172","messageId":"218","endLine":204,"endColumn":20},{"ruleId":"216","severity":2,"message":"217","line":218,"column":16,"nodeType":"172","messageId":"218","endLine":218,"endColumn":20},{"ruleId":"216","severity":2,"message":"217","line":222,"column":16,"nodeType":"172","messageId":"218","endLine":222,"endColumn":20},{"ruleId":"170","severity":1,"message":"219","line":264,"column":13,"nodeType":"172","messageId":"173","endLine":264,"endColumn":17},{"ruleId":"179","severity":1,"message":"220","line":551,"column":45,"nodeType":"221","messageId":"181","endLine":551,"endColumn":47},{"ruleId":"179","severity":1,"message":"220","line":551,"column":73,"nodeType":"221","messageId":"181","endLine":551,"endColumn":75},{"ruleId":"179","severity":1,"message":"220","line":1246,"column":36,"nodeType":"221","messageId":"181","endLine":1246,"endColumn":38},{"ruleId":"179","severity":1,"message":"220","line":1246,"column":57,"nodeType":"221","messageId":"181","endLine":1246,"endColumn":59},{"ruleId":"179","severity":1,"message":"222","line":1866,"column":35,"nodeType":"221","messageId":"181","endLine":1866,"endColumn":37},{"ruleId":"179","severity":1,"message":"222","line":1866,"column":43,"nodeType":"221","messageId":"181","endLine":1866,"endColumn":45},{"ruleId":"179","severity":1,"message":"220","line":1866,"column":43,"nodeType":"221","messageId":"181","endLine":1866,"endColumn":45},{"ruleId":"179","severity":1,"message":"220","line":1866,"column":50,"nodeType":"221","messageId":"181","endLine":1866,"endColumn":52},{"ruleId":"223","severity":2,"message":"224","line":2535,"column":26,"nodeType":"172","messageId":"225","endLine":2535,"endColumn":44},{"ruleId":"223","severity":2,"message":"226","line":2572,"column":39,"nodeType":"172","messageId":"225","endLine":2572,"endColumn":45},{"ruleId":"223","severity":2,"message":"226","line":2573,"column":5,"nodeType":"172","messageId":"225","endLine":2573,"endColumn":11},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"229","text":"230"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-redeclare","'i' is already defined.","Identifier","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'id' is already defined.","'hex' is already defined.","no-mixed-operators","Unexpected mix of '&' and '>>'.","unexpectedMixedOperator","'x' is already defined.","'y' is already defined.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","no-unused-vars","'x' is assigned a value but never used.","unusedVar","'y' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-use-before-define","'x' was used before it was defined.","usedBeforeDefined","'y' was used before it was defined.","Expected '===' and instead saw '=='.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"231","text":"230"},"no-restricted-globals","Unexpected use of 'self'.","defaultMessage","'test' is already defined.","Unexpected mix of '||' and '&&'.","LogicalExpression","Unexpected mix of '&&' and '||'.","no-undef","'webkitAudioContext' is not defined.","undef","'define' is not defined.","no-global-assign","no-unsafe-negation",[1891,1902],"",[175,188]]