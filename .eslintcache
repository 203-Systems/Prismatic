[{"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\index.js":"1","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\serviceWorker.js":"2","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\App.jsx":"3","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\deviceConfigs.js":"4","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Selector.jsx":"5","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\ProjectFileReader.jsx":"6","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Navbar.jsx":"7","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Button.jsx":"8","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Canvas.jsx":"9","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\palette.js":"10","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\projectFile.js":"11","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Spacer.jsx":"12","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\keyLED.js":"13","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\autoPlay.js":"14","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\config.js":"15"},{"size":510,"mtime":1603035885985,"results":"16","hashOfConfig":"17"},{"size":5227,"mtime":1602971545249,"results":"18","hashOfConfig":"17"},{"size":12012,"mtime":1610014843530,"results":"19","hashOfConfig":"17"},{"size":12755,"mtime":1610019260200,"results":"20","hashOfConfig":"17"},{"size":234,"mtime":1603035885983,"results":"21","hashOfConfig":"22"},{"size":427,"mtime":1610006627608,"results":"23","hashOfConfig":"17"},{"size":580,"mtime":1602975748586,"results":"24","hashOfConfig":"17"},{"size":1190,"mtime":1609891527716,"results":"25","hashOfConfig":"17"},{"size":10961,"mtime":1610012594408,"results":"26","hashOfConfig":"17"},{"size":5448,"mtime":1602998840785,"results":"27","hashOfConfig":"17"},{"size":5413,"mtime":1610006473510,"results":"28","hashOfConfig":"17"},{"size":280,"mtime":1603039417833,"results":"29","hashOfConfig":"17"},{"size":1949,"mtime":1603040644327,"results":"30","hashOfConfig":"17"},{"size":2315,"mtime":1610017441290,"results":"31","hashOfConfig":"17"},{"size":80,"mtime":1609921400766,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1v9b1q6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"91t3ss",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\index.js",[],["72","73"],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\serviceWorker.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\App.jsx",["74","75","76","77","78","79","80"],"import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport ProjectFileReader from \"./ProjectFileReader\";\r\nimport ProjectFile from \"../Engine/projectFile\";\r\nimport Button from \"./Button\";\r\nimport Canvas from \"./Canvas\";\r\nimport config from \"../config\";\r\nimport deviceConfigs from \"../deviceConfigs\";\r\nimport Select from 'react-select';\r\n// import download from \"downloadjs\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if(navigator.requestMIDIAccess != undefined)\r\n    {\r\n      navigator.requestMIDIAccess().then(this.onMIDISuccess, this.onMIDIFailure);\r\n    }\r\n    else\r\n    {\r\n      alert(\"Your device doesn't support WebMidi\")\r\n    }\r\n    \r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    if(urlParams.get('unipack'))\r\n    {\r\n      var unipack_url = urlParams.get('unipack');\r\n      this.downloadProjectFile(unipack_url)\r\n    }\r\n  }\r\n\r\n  state = {\r\n    projectFile: undefined,\r\n\r\n    midiInput: [],\r\n    midiOutput: [],\r\n\r\n    layoutConfigName: config.defaultLayout,\r\n    layoutConfig: deviceConfigs[config.defaultLayout],\r\n\r\n    inputDevice: undefined,\r\n    inputConfigName: undefined,\r\n    inputConfig: undefined,\r\n\r\n    outputDevice: undefined,\r\n    outputConfigName: undefined,\r\n    outputConfig: undefined,\r\n\r\n    autoplayProgress: undefined,\r\n  };\r\n\r\n  canvas = React.createRef();\r\n\r\n  downloadProjectFile = (url) => { //Scrapped for now because Browser doesn't allow cross origon fetching. Need intergration witb third party sites CDNs\r\n  // alert(\"Downloading Unipack from \" + url)  \r\n  // let projectPack = download(url)\r\n    // console.log(projectPack)\r\n  }\r\n\r\n  loadProjectFile = (projectPack) => {\r\n    // console.log(projectPack)\r\n    new ProjectFile(projectPack)\r\n    .then((projectFile) => {this.setState({ projectFile: projectFile})})\r\n    .catch((message) => {alert(message)});\r\n  }\r\n\r\n  onMIDISuccess = (midiAccess) => {\r\n    console.log(\"Got access your MIDI devices.\");\r\n\r\n    var midiInput = [];\r\n    console.log(\"Input\");\r\n    for (var input of midiAccess.inputs.values()) {\r\n      console.log(input.name);\r\n      midiInput.push({label: input.name, value: input})\r\n    }\r\n    console.log(midiInput)\r\n    this.setState({midiInput: midiInput})\r\n\r\n    var midiOutput = [];\r\n    console.log();\r\n    console.log(\"Output\");\r\n    for (var output of midiAccess.outputs.values()) {\r\n      console.log(output.name);\r\n      midiOutput.push({label: output.name, value: output})\r\n    }\r\n    this.setState({midiOutput: midiOutput})\r\n\r\n    midiAccess.onstatechange = this.onMidiStateChange\r\n  };\r\n\r\n  onMidiStateChange(e)\r\n  {\r\n    console.log(e);\r\n    console.log(e.port.name, e.port.state);\r\n    if(e.port.state === \"connected\")\r\n    {\r\n      if(e.port.type === \"input\")\r\n      {\r\n        var midiInput = this.state.midiInput\r\n        midiInput.push({label: e.port.name, value: e.port})\r\n        this.setState({midiInput: midiInput})\r\n      }\r\n      else if(e.port.type === \"output\")\r\n      {\r\n        var midiOutput = this.state.midiOutput\r\n        midiOutput.push({label: e.port.name, value: e.port})\r\n        this.setState({midiOutput: midiOutput})\r\n      }\r\n    }\r\n    else if(e.port.state === \"disconnected\")\r\n    {\r\n      if(e.port.type === \"input\")\r\n      {\r\n        var midiInput = this.state.midiInput\r\n        for(var i = 0; i < midiInput.length; i++)\r\n        {\r\n          if(midiInput[i].label === e.port.name)\r\n          {\r\n            midiInput.splice(i);\r\n            break;\r\n          }\r\n        }\r\n        this.setState({midiInput: midiInput})\r\n        if(this.state.inputDevice.name === this.e.port.name)\r\n        {\r\n          this.setState({inputDevice: undefined})\r\n          this.setState({inputDeviceConfig: undefined})\r\n          this.setState({inputDeviceName: undefined})\r\n        }\r\n      }\r\n      else if(e.port.type === \"output\")\r\n      {\r\n        var midiOutput = this.state.midiOutput\r\n        for(var i = 0; i < midiOutput.length; i++)\r\n        {\r\n          if(midiOutput[i].label === e.port.name)\r\n          {\r\n            midiOutput.splice(i);\r\n            break;\r\n          }\r\n        }\r\n        this.setState({midiOutput: midiOutput})\r\n        if(this.state.outputDevice.name === this.e.port.name)\r\n        {\r\n          this.setState({outputDevice: undefined})\r\n          this.setState({outputDeviceConfig: undefined})\r\n          this.setState({outputDeviceName: undefined})\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onMIDIFailure() {\r\n    console.log(\"Could not access your MIDI devices.\");\r\n    alert(\"Could not access your MIDI devices. Try use another web browser or hardware platform\")\r\n  }\r\n  \r\n  autoConfigPicker(deviceName, mode) {//mode 0 for input, mode 1 for output\r\n    if(deviceName !== undefined)\r\n    {\r\n      for(var key in deviceConfigs)\r\n      {\r\n        if (deviceName.match(deviceConfigs[key].midiNameRegex) !== null) {\r\n          var config = deviceConfigs[key]\r\n          console.log(`${mode ? \"Output\" : \"input\"} config has been auto assigned to ${key}`)\r\n          switch(mode)\r\n          {\r\n            case 0:\r\n              this.setState({inputConfigName: key});\r\n              this.setState({inputConfig: config});\r\n              return;\r\n            case 1:\r\n              this.setState({outputConfigName: key});\r\n              this.setState({outputConfig: config});\r\n              return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    alert(`Unable to find matching ${mode ? \"output\" : \"input\"} config for device ${deviceName}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main\"> \r\n          <div className=\"toolbar\"> {/* Not yet made */}\r\n          <text>203 | Prismatic (Tech Preview Demo)</text>\r\n          <div  className=\"toolbarItem\"/>\r\n          <text className=\"toolbarItem\">{this.state.projectFile !== undefined ? `Current Project: ${this.state.projectFile.info[\"title\"]} by ${this.state.projectFile.info[\"producerName\"]}` : \"No project loaded\"}</text>\r\n          <ProjectFileReader loadProjectFile={this.loadProjectFile}></ProjectFileReader>\r\n          <div  className=\"toolbarItem\"/>\r\n          <text>UI Layout</text>\r\n          <Select\r\n            className=\"toolbarItem\"\r\n            options={this.prepDeviceConfig()}\r\n            autosize={true}\r\n            value={this.state.layoutConfigName !== undefined ? {label: this.state.layoutConfigName, value: this.state.layoutConfig} : undefined}\r\n            placeholder=\"Layout Config\"\r\n            onChange={this.setLayoutConfig.bind(this)}\r\n          />\r\n          <text>Midi Input Device</text>\r\n          <Select\r\n            className=\"toolbarItem\"\r\n            options={this.state.midiInput}\r\n            autosize={true}\r\n            value={this.state.inputDevice !== undefined ? {label: this.state.inputDevice.name, value: this.state.inputDevice} : undefined}\r\n            placeholder=\"Input Device\"\r\n            onChange={this.setInputDevice.bind(this)}\r\n          />\r\n          <text>Midi Input Device Config</text>\r\n          <Select\r\n            className=\"toolbarItem\"\r\n            options={this.prepDeviceConfig()}\r\n            autosize={true}\r\n            value={this.state.inputConfigName !== undefined ? {label: this.state.inputConfigName, value: this.state.inputConfig} : undefined}\r\n            placeholder=\"Input Device Config\"\r\n            onChange={this.setInputConfig.bind(this)}\r\n          />\r\n          <text>Midi Output Device</text>\r\n          <Select\r\n            className=\"toolbarItem\"\r\n            options={this.state.midiOutput}\r\n            autosize={true}\r\n            value={this.state.outputDevice !== undefined ? {label: this.state.outputDevice.name, value: this.state.outputDevice} : undefined}\r\n            placeholder=\"Output Device\"\r\n            onChange={this.setOutputDevice.bind(this)}\r\n          />\r\n          <text>Midi Output Device Config</text>\r\n          <Select\r\n            className=\"toolbarItem\"\r\n            options={this.prepDeviceConfig()}\r\n            autosize={true}\r\n            value={this.state.outputConfigName !== undefined ? {label: this.state.outputConfigName, value: this.state.outputConfig} : undefined}\r\n            placeholder=\"Output Device Config\"\r\n            onChange={this.setOutputConfig.bind(this)}\r\n          />\r\n          <div/>\r\n          <text>{\"Autoplay\" + (this.state.autoplayProgress === undefined ? \"\" : this.state.autoplayProgress)}</text>\r\n          <div/>\r\n          <button style={{width: \"50px\", marginRight: \"10px\", display: !(this.state.projectFile !== undefined && this.state.projectFile.autoplay.status === \"PLAYING\") ?  \"inline\" : \"none\"}} onClick={this.playAutoplay}>Play</button>\r\n          <button style={{width: \"50px\", marginRight: \"10px\", display: this.state.projectFile !== undefined && this.state.projectFile.autoplay.status === \"PAUSED\" ?  \"inline\" : \"none\"}} onClick={this.stopAutoplay}>Stop</button>\r\n          <button style={{width: \"50px\", marginRight: \"10px\", display: this.state.projectFile !== undefined && this.state.projectFile.autoplay.status === \"PLAYING\" ?  \"inline\" : \"none\"}} onClick={this.pauseAutoplay}>Pause</button>\r\n          </div>\r\n          <div\r\n            className=\"canvas\"\r\n            style={{\r\n              padding: this.state.layoutConfig.padding,\r\n              borderRadius: this.state.layoutConfig.radius,\r\n            }}\r\n          >\r\n            <Canvas\r\n              ref={this.canvas}\r\n              projectFile={this.state.projectFile}\r\n              layoutConfig={this.state.layoutConfig}\r\n              inputDevice={this.state.inputDevice}\r\n              inputConfig={this.state.inputConfig}\r\n              outputDevice={this.state.outputDevice}\r\n              outputConfig={this.state.outputConfig}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  setLayoutConfig(config)\r\n  {\r\n    // console.log(config)\r\n    this.setState({layoutConfigName: config.label});\r\n    this.setState({layoutConfig: config.value});\r\n  }\r\n\r\n  setInputConfig(config)\r\n  {\r\n    // console.log(config)\r\n    this.setState({inputConfigName: config.label});\r\n    this.setState({inputConfig: config.value});\r\n  }\r\n\r\n  setOutputConfig(config)\r\n  {\r\n    // console.log(config)\r\n    this.setState({outputConfigName: config.label});\r\n    this.setState({outputConfig: config.value});\r\n  }\r\n\r\n  setInputDevice(device)\r\n  {\r\n    this.setState({inputDevice: device.value});\r\n    this.autoConfigPicker(device.value.name, 0);\r\n  }\r\n\r\n  setOutputDevice(device)\r\n  {\r\n    // console.log(\"Output device set to \" + device.name);\r\n    this.setState({outputDevice: device.value});\r\n    this.autoConfigPicker(device.value.name, 1);\r\n  }\r\n\r\n  prepDeviceConfig()\r\n  { \r\n    var result=[];\r\n    for (var key in deviceConfigs)\r\n    {\r\n      result.push({\r\n        label: key,\r\n        value: deviceConfigs[key],\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  playAutoplay = () =>\r\n  {\r\n    if(this.state.projectFile !== undefined && this.state.projectFile.autoplay !== undefined)\r\n    {\r\n      this.state.projectFile.autoplay.play(this.canvas.current, this.state.layoutConfig.canvas_origin, \r\n        function([current, total]){\r\n          this.setState({autoplayProgress: ` - ${(current / total * 100).toFixed(2)}% completed (${current}/${total})`});\r\n        }.bind(this));\r\n    }\r\n    else\r\n    {\r\n      alert(\"No project loaded!\")\r\n    }\r\n  }\r\n\r\n  stopAutoplay = () =>\r\n  {\r\n    if(this.state.projectFile !== undefined && this.state.projectFile.autoplay !== undefined)\r\n    {\r\n      this.state.projectFile.autoplay.stop();\r\n      this.setState({autoplayProgress: undefined});\r\n    }\r\n    else\r\n    {\r\n      alert(\"No project loaded!\")\r\n    }\r\n  }\r\n\r\n  pauseAutoplay = () =>\r\n  {\r\n    if(this.state.projectFile !== undefined && this.state.projectFile.autoplay !== undefined)\r\n    {\r\n      this.state.projectFile.autoplay.pause();\r\n      this.setState({autoplayProgress: this.state.autoplayProgress + \" - Paused\"});\r\n    }\r\n    else\r\n    {\r\n      alert(\"No project loaded!\")\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\deviceConfigs.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"const deviceConfigs = {\r\n  \"Launchpad Pro\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad Pro\",\r\n    \r\n    layout: [\r\n      [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"]],\r\n\r\n    keymap: [\r\n      [null, 28, 29, 30, 31, 32, 33, 34, 35, null],\r\n      [108, 64, 65, 66, 67, 96, 97, 98, 99, 100], \r\n      [109, 60, 61, 62, 63, 92, 93, 94, 95, 101],\r\n      [110, 56, 57, 58, 59, 88, 89, 90, 91, 102],\r\n      [111, 52, 53, 54, 55, 84, 85, 86, 87, 103],\r\n      [112, 48, 49, 50, 51, 80, 81, 82, 83, 104],\r\n      [113, 44, 45, 46, 47, 76, 77, 78, 79, 105],\r\n      [114, 40, 41, 42, 43, 72, 73, 74, 75, 106],\r\n      [115, 36, 37, 38, 39, 68, 69, 70, 71, 107],\r\n      [null, 116, 117, 118, 119, 120, 121, 122, 123, null]],\r\n\r\n    //Size of LED since sometimes Key can come without LED. We don't really need them since we can load the size of layout array\r\n    width: 10, \r\n    height: 10,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 15,\r\n    \r\n    canvas_origin: [1,1],\r\n\r\n    chainKey: [[9,1], [9,2], [9,3], [9,4], [9,5], [9,6], [9,7], [9,8]],\r\n\r\n    mcTable: [\r\n      [1,0], [2,0], [3,0], [4,0], [5,0], [6,0], [7,0], [8,0],\r\n      [9,1], [9,2], [9,3], [9,4], [9,5], [9,6], [9,7], [9,8],\r\n      [8,9], [7,9], [6,9], [5,9], [4,9], [3,9], [2,9], [1,9],\r\n      [0,8], [0,7], [0,6], [0,5], [0,4], [0,3], [0,2], [0,1]],\r\n\r\n    hexSysexGen: function()\r\n    {\r\n      if(arguments.length != 2 && arguments.length != 3)\r\n        return //Error\r\n      switch(arguments.length)\r\n      {\r\n        case 2: //MC\r\n          var mc = arguments[0]\r\n          if(this.mcTable[mc] == null)\r\n            return\r\n          var x,y = this.mcTable[mc]\r\n          var hex = arguments[1]\r\n          break;\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 2 //6 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 2\r\n      var b = (hex & 0xFF) >> 2\r\n      return [240, 0, 32, 41, 2, 24, 11, xy, r, g, b, 247]\r\n    }\r\n  },\r\n  \"Launchpad MK2\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad MK2\",\r\n    \r\n    layout: [\r\n      [\"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"]],\r\n\r\n    keymap: [\r\n      [\"C104\", \"C105\", \"C106\", \"C107\", \"C108\", \"C109\", \"C110\", \"C111\", null],\r\n      [81, 82, 83, 84, 85, 86, 87, 88, 89],  \r\n      [71, 72, 73, 74, 75, 76, 77, 78, 79], \r\n      [61, 62, 63, 64, 65, 66, 67, 68, 69], \r\n      [51, 52, 53, 54, 55, 56, 57, 58, 59], \r\n      [41, 42, 43, 44, 45, 46, 47, 48, 49], \r\n      [31, 32, 33, 34, 35, 36, 37, 38, 39], \r\n      [21, 22, 23, 24, 25, 26, 27, 28, 29], \r\n      [11, 12, 13, 14, 15, 16, 17, 18, 19]],\r\n\r\n    width: 9, \r\n    height: 9,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 15,\r\n    \r\n    canvas_origin: [0,1],\r\n\r\n    chainKey: [[8,1], [8,2], [8,3], [8,4], [8,5], [8,6], [8,7], [8,8]],\r\n\r\n    mcTable: [\r\n      [0,0], [1,0], [2,0], [3,0], [4,0], [5,0], [6,0], [7,0],\r\n      [8,1], [8,2], [8,3], [8,4], [8,5], [8,6], [8,7], [8,8],\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,],\r\n\r\n    hexSysexGen: function()\r\n    {\r\n      if(arguments.length != 2 && arguments.length != 3)\r\n        return //Error\r\n      switch(arguments.length)\r\n      {\r\n        case 2: //MC\r\n          var mc = arguments[0]\r\n          if(this.mcTable[mc] == null)\r\n            return\r\n          var x,y = this.mcTable[mc]\r\n          var hex = arguments[1]\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var hex = arguments[2]\r\n        default:\r\n          var xy = x * 10 + y\r\n          var r = (hex >> 16) >> 2 //6 bit color\r\n          var g = (hex & 0xFF00 >> 8) >> 2\r\n          var b = (hex & 0xFF) >> 2\r\n          return [240, 0, 32, 41, 2, 24, 11, xy, r, g, b, 247]\r\n      }\r\n    }\r\n  },\r\n  \"Launchpad X\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad X\",\r\n    \r\n    layout: [\r\n      [\"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"]],\r\n\r\n    keymap: [\r\n      [28, 29, 30, 31, 32, 33, 34, 35, 27],\r\n      [64, 65, 66, 67, 96, 97, 98, 99, 100], \r\n      [60, 61, 62, 63, 92, 93, 94, 95, 101],\r\n      [56, 57, 58, 59, 88, 89, 90, 91, 102],\r\n      [52, 53, 54, 55, 84, 85, 86, 87, 103],\r\n      [48, 49, 50, 51, 80, 81, 82, 83, 104],\r\n      [44, 45, 46, 47, 76, 77, 78, 79, 105],\r\n      [40, 41, 42, 43, 72, 73, 74, 75, 106],\r\n      [36, 37, 38, 39, 68, 69, 70, 71, 107]],\r\n\r\n    width: 9, \r\n    height: 9,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 5,\r\n    \r\n    canvas_origin: [0,1],\r\n\r\n    chainKey: [[8,1], [8,2], [8,3], [8,4], [8,5], [8,6], [8,7], [8,8]],\r\n\r\n    mcTable: [\r\n      [0,0], [1,0], [2,0], [3,0], [4,0], [5,0], [6,0], [7,0],\r\n      [8,1], [8,2], [8,3], [8,4], [8,5], [8,6], [8,7], [8,8],\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,],\r\n\r\n    hexSysexGen: function()\r\n    {\r\n      if(arguments.length != 2 && arguments.length != 3)\r\n        return //Error\r\n      switch(arguments.length)\r\n      {\r\n        case 2: //MC\r\n          var mc = arguments[0]\r\n          if(this.mcTable[mc] == null)\r\n            return\r\n          var x,y = this.mcTable[mc]\r\n          var hex = arguments[1]\r\n          break;\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 1 //7 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 1\r\n      var b = (hex & 0xFF) >> 1\r\n      return [240, 0, 32, 41, 2, 12, 22, 3, 3, xy, r, g, b, 247]\r\n    }\r\n  },\r\n  \"Launchpad Pro MK3\":\r\n  {\r\n    channel: 1,\r\n    midiNameRegex: \"^Launchpad Pro MK3\",\r\n\r\n    layout: [\r\n      [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"⬤\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"⬤\"],\r\n      [\"　\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"⬤\", \"　\"]],\r\n\r\n      keymap: [\r\n        [26, 28, 29, 30, 31, 32, 33, 34, 35, 27],\r\n        [108, 64, 65, 66, 67, 96, 97, 98, 99, 100], \r\n        [109, 60, 61, 62, 63, 92, 93, 94, 95, 101],\r\n        [110, 56, 57, 58, 59, 88, 89, 90, 91, 102],\r\n        [111, 52, 53, 54, 55, 84, 85, 86, 87, 103],\r\n        [112, 48, 49, 50, 51, 80, 81, 82, 83, 104],\r\n        [113, 44, 45, 46, 47, 76, 77, 78, 79, 105],\r\n        [114, 40, 41, 42, 43, 72, 73, 74, 75, 106],\r\n        [115, 36, 37, 38, 39, 68, 69, 70, 71, 107],\r\n        [null, 116, 117, 118, 119, 120, 121, 122, 123, null]],\r\n\r\n    //Size of LED since sometimes Key can come without LED. We don't really need them since we can load the size of layout array\r\n    width: 10, \r\n    height: 10,\r\n\r\n    //UI related\r\n    padding: 25,\r\n    radius: 5,\r\n    \r\n    canvas_origin: [1,1],\r\n\r\n    chainKey: [[9,1], [9,2], [9,3], [9,4], [9,5], [9,6], [9,7], [9,8]],\r\n\r\n    mcTable: [\r\n      [1,0], [2,0], [3,0], [4,0], [5,0], [6,0], [7,0], [8,0],\r\n      [9,1], [9,2], [9,3], [9,4], [9,5], [9,6], [9,7], [9,8],\r\n      [8,9], [7,9], [6,9], [5,9], [4,9], [3,9], [2,9], [1,9],\r\n      [0,8], [0,7], [0,6], [0,5], [0,4], [0,3], [0,2], [0,1]],\r\n      \r\n    hexSysexGen: function()\r\n    {\r\n      return\r\n      if(arguments.length != 2 && arguments.length != 3)\r\n        return //Error\r\n      switch(arguments.length)\r\n      {\r\n        case 2: //MC\r\n          var mc = arguments[0]\r\n          if(this.mcTable[mc] == null)\r\n            return\r\n          var x,y = this.mcTable[mc]\r\n          var hex = arguments[1]\r\n          break;\r\n        case 3: //XY\r\n          var x = arguments[0] + 1\r\n          var y = arguments[1] + 1\r\n          var hex = arguments[2]\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      var xy = x * 10 + y\r\n      var r = (hex >> 16) >> 1 //7 bit color\r\n      var g = (hex & 0xFF00 >> 8) >> 1\r\n      var b = (hex & 0xFF) >> 1\r\n      return [240, 0, 32, 41, 2, 12, 22, 3, 3, xy, r, g, b, 247]\r\n    }\r\n  },\r\n  \"Matrix\":\r\n  {\r\n    channel: 2,\r\n    midiNameRegex: \"^Matrix\",\r\n    \r\n    layout: [\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◪\", \"⬕\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"⬔\", \"◩\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"],\r\n      [\"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\", \"◻\"]],\r\n\r\n    keymap: [\r\n      [64, 65, 66, 67, 96, 97, 98, 99], \r\n      [60, 61, 62, 63, 92, 93, 94, 95],\r\n      [56, 57, 58, 59, 88, 89, 90, 91],\r\n      [52, 53, 54, 55, 84, 85, 86, 87],\r\n      [48, 49, 50, 51, 80, 81, 82, 83],\r\n      [44, 45, 46, 47, 76, 77, 78, 79],\r\n      [40, 41, 42, 43, 72, 73, 74, 75],\r\n      [36, 37, 38, 39, 68, 69, 70, 71],\r\n      [100, 101, 102, 103, 104, 105, 106, 107]],\r\n\r\n    width: 8, \r\n    height: 8,\r\n\r\n    //UI related\r\n    padding: 20,\r\n    radius: 15,\r\n    \r\n    canvas_origin: [0,0],\r\n\r\n    chainKey: [[0,8], [1,8], [2,8], [3,8], [4,8], [5,8], [6,8], [7,8]],\r\n\r\n    mcTable: [\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,\r\n      null, null, null, null, null, null, null, null,],\r\n\r\n    hexSysexGen: function()\r\n      {\r\n        if(arguments.length != 3)\r\n          return //Error\r\n        switch(arguments.length)\r\n        {\r\n          // case 2: //MC\r\n          //   var mc = arguments[0]\r\n          //   if(this.mcTable[mc] == null)\r\n          //     return\r\n          //   var x,y = this.mcTable[mc]\r\n          //   var hex = arguments[1]\r\n          case 3: //XY\r\n            var x = arguments[0]\r\n            var y = arguments[1]\r\n            var hex = arguments[2]\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n        var r = (hex >> 16) >> 1 //7 bit color\r\n        var g = (hex & 0xFF00 >> 8) >> 1\r\n        var b = (hex & 0xFF) >> 1\r\n        return [240, 0, 2, 3, 1, 0, 18, 32, 0, 3, r, g, b, 247]\r\n      }\r\n  },\r\n}\r\n\r\nexport default deviceConfigs;","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Selector.jsx",["117"],"import React, { Component } from 'react'\r\n\r\nconst Selector = ({ className, name, options }) => (\r\n    <div className={className}>\r\n        <select name={name}>\r\n            \r\n        </select>\r\n    </div>\r\n)\r\n\r\nexport default Selector",["118","119"],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\ProjectFileReader.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Navbar.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Button.jsx",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Canvas.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { Component } from \"react\";\r\n// import ProjectFileReader from './Components/projectFileReader';\r\nimport Button from './Button'\r\nimport palette from '../palette'\r\nimport Spacer from './Spacer'\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    setInterval(() => {this.setState({colormap: this.state.colormap})}, 1000/60);\r\n  }\r\n\r\n  state = {  \r\n    colormap: new Array(this.props.layoutConfig.width).fill(null).map(\r\n      () => new Array(this.props.layoutConfig.height).fill(palette[0])),\r\n  };\r\n\r\n  keypressHistory = new Array(8).fill(null).map(\r\n              () => new Array(this.props.layoutConfig.width).fill(null).map(\r\n              () => new Array(this.props.layoutConfig.height).fill(0)));\r\n  currentChain = 0;\r\n  // overlay = \"#808080\";\r\n\r\n  // shouldUpdate = (nextProps) => !Object.is(this.props.layoutConfig, nextProps.layoutConfig);\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.layoutConfig !== this.props.layoutConfig) {\r\n      this.initlalizeCanvas(nextProps.layoutConfig);\r\n    }\r\n\r\n    if (nextProps.inputDevice !== this.props.inputDevice /* || prevProps.inputConfig !== this.props.inputConfig */ ) {\r\n      this.setupMidiInput(nextProps.inputDevice, this.props.inputDevice);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  initlalizeCanvas(config = this.props.layoutConfig)\r\n  {\r\n    this.state.colormap = new Array(config.width).fill(null).map(\r\n      () => new Array(config.height).fill(palette[0])) //I write directly into state because that takes so long it will be complete by the time render is over and throw an error already. Since shouldComponentUpdate will enforce update I will give it a pass\r\n    // this.setState({colormap: this.state.colormap})\r\n    this.keypressHistory = new Array(8).fill(null).map(\r\n      () => new Array(config.width).fill(null).map(\r\n      () => new Array(config.height).fill(0)));\r\n    this.currentChain = 0;\r\n  }\r\n\r\n  setupMidiInput(newInput, oldInput)\r\n  {\r\n    // console.log([newInput, oldInput])\r\n    if(oldInput !== undefined)\r\n      oldInput.onmidimessage = null;\r\n    if(newInput !== undefined)\r\n      newInput.onmidimessage = this.midiInputHandler;\r\n  } \r\n\r\n  midiInputHandler = (midiMessage) =>\r\n  {\r\n    console.log(midiMessage.data);\r\n    let [y,x] = this.indexOf2dArray(midiMessage.data[1], this.props.inputConfig.keymap);\r\n    if(x !== NaN && y !== NaN)\r\n    {\r\n      // let [offseted_x, offseted_y] = this.arrayCalculation([x, y], this.props.inputConfig.canvas_origin, \"-\");\r\n      switch(midiMessage.data[0])\r\n      {\r\n        case 144:\r\n          if(midiMessage.data[2] != 0)\r\n          {\r\n            this.keyOn(x, y, this.props.inputConfig);\r\n            break;\r\n          }\r\n        case 128:\r\n          this.keyOff(x, y, this.props.inputConfig);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  keyOn = (x, y, config = this.props.layoutConfig) => \r\n  {\r\n    console.log(\"Note On - \" + x.toString() + ' ' + y.toString());\r\n\r\n    let [offseted_x, offseted_y] = this.arrayCalculation([x, y], config.canvas_origin, \"-\");\r\n    console.log([x, y, offseted_x, offseted_y])\r\n\r\n    if(this.props.projectFile !== undefined)\r\n    {\r\n      //Sound\r\n      if(this.props.projectFile.keySound !== undefined && this.props.projectFile.keySound[this.currentChain] !== undefined && this.props.projectFile.keySound[this.currentChain][offseted_x] !== undefined && this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y] !== undefined && this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y].length > 0)\r\n      {\r\n        let soundIndex = this.keypressHistory[this.currentChain][x][y] % this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y].length;\r\n        // console.log('Play sound ${this.currentChain} ${offseted_x}')\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex].stop();\r\n        this.props.projectFile.keySound[this.currentChain][offseted_x][offseted_y][soundIndex].play();\r\n      }\r\n\r\n      //LED\r\n      if(this.props.projectFile.keyLED !== undefined && this.props.projectFile.keyLED[this.currentChain] !== undefined && this.props.projectFile.keyLED[this.currentChain][offseted_x] !== undefined && this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y] !== undefined && this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y].length > 0)\r\n      {\r\n        let ledIndex = this.keypressHistory[this.currentChain][x][y] % this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y].length;\r\n        this.props.projectFile.keyLED[this.currentChain][offseted_x][offseted_y][ledIndex].play(this);\r\n      }\r\n\r\n      //Update History\r\n      if(this.keypressHistory[this.currentChain][x] != undefined && this.keypressHistory[this.currentChain][x][y] != undefined)\r\n        this.keypressHistory[this.currentChain][x][y] += 1;\r\n\r\n      //Chain Change\r\n      this.checkChain(x, y, config);\r\n    }\r\n  }\r\n\r\n  checkChain = (x, y, config) =>\r\n  {\r\n    for(var i = 0; i < config.chainKey.length; i++) {\r\n      if(config.chainKey[i][0] === x && config.chainKey[i][1] === y)\r\n        this.chainChange(i);\r\n    }\r\n  }\r\n\r\n  keyOff = (x, y) => \r\n  {\r\n    console.log(\"Note Off - \" + x.toString() + ' ' + y.toString());\r\n  }\r\n\r\n  chainChange = (chain) =>\r\n  {\r\n    console.log(\"Chain Changed to \" + (chain + 1));\r\n    this.currentChain = chain;\r\n  }\r\n\r\n  setColorPalette = (x, y, p) =>\r\n  {\r\n    let [offseted_x, offseted_y] = this.arrayCalculation([x, y], this.props.layoutConfig.canvas_origin, \"+\");\r\n    this.state.colormap[offseted_x][offseted_y] = palette[p]\r\n    if(this.props.outputDevice != undefined)\r\n    {\r\n      let [output_offseted_x, output_offseted_y] = this.arrayCalculation([x, y], this.props.inputConfig.canvas_origin, \"+\");\r\n      this.sendMidi(\"NoteOn\", this.props.outputConfig.channel, this.props.outputConfig.keymap[output_offseted_y][output_offseted_x], p)\r\n    }\r\n  }\r\n\r\n  setMCColorPalette = (mc, p) =>\r\n  {\r\n    if(this.props.layoutConfig.mcTable[mc] != null)\r\n    {\r\n      let [x, y] = this.props.layoutConfig.mcTable[mc];\r\n      this.state.colormap[x][y] = palette[p]\r\n      if(this.props.outputDevice != undefined && this.props.outputConfig.mcTable[mc] != undefined)\r\n      {\r\n        let [device_x, device_y] = this.props.outputConfig.mcTable[mc];\r\n        this.sendMidi(\"NoteOn\", this.props.outputConfig.channel, this.props.outputConfig.keymap[device_y][device_x], p)\r\n      }\r\n    }\r\n  }\r\n\r\n  setColorHEX = (x, y, hex) =>\r\n  {\r\n    let [offseted_x, offseted_y] = this.arrayCalculation([x, y], this.props.layoutConfig.canvas_origin, \"+\");\r\n    this.state.colormap[offseted_x][offseted_y] = hex\r\n    this.sendSysex(this.props.outputConfig.hexSysexGen(x, y, hex))\r\n  }\r\n\r\n  setMCColorHEX = (mc, hex) =>\r\n  {\r\n    if(this.props.layoutConfig.mcTable[mc] != null)\r\n    {\r\n      let [x, y] = this.props.layoutConfig.mcTable[mc];\r\n      this.state.colormap[x][y] = hex\r\n    }\r\n    if(this.props.outputConfig.mcTable[mc] != null)\r\n    {\r\n      this.sendSysex(this.props.outputConfig.hexSysexGen(mc, hex))\r\n    }\r\n  }\r\n\r\n  sendMidi(mode, channel, note, value)\r\n  {\r\n    if(typeof(note) === \"string\")\r\n    {\r\n      let modeKey = note.charAt(0);\r\n      note = parseInt(note.substr(1))\r\n      switch(modeKey)\r\n      {\r\n        case \"C\":\r\n          mode = \"CC\"\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    } \r\n    switch(mode)\r\n    {\r\n      case \"NoteOn\":\r\n        this.props.outputDevice.send([0x90 + channel - 1, note, value])\r\n          break;\r\n      case \"NoteOff\":\r\n        this.props.outputDevice.send([0x80 + channel - 1, note, value])\r\n        break;\r\n      case \"CC\":\r\n        this.props.outputDevice.send([0xB0 + channel - 1, note, value])\r\n        break;\r\n    }\r\n  }\r\n\r\n  sendSysex(message)\r\n  {\r\n    this.props.outputDevice.send(message)\r\n  }\r\n\r\n  // // Overlays a color\r\n  // colorOverlay = (hex, overlay) => {\r\n  //   let [r, g, b] = this.toRGB(hex)\r\n  //   let [r0, g0, b0] = this.toRGB(overlay)\r\n  //   r = Math.round(r * (255 - r0) / 255 + r0);\r\n  //   g = Math.round(g * (255 - g0) / 255 + g0);\r\n  //   b = Math.round(b * (255 - b0) / 255 + b0);\r\n  //   return this.toHEX(r, g, b)\r\n  // }\r\n\r\n  // // Converts a CHAD HEX color to a beta RGB color\r\n  // toRGB = (hex) => {\r\n  //   const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n  //   return [parseInt(result[1], 16),\r\n  //           parseInt(result[2], 16),\r\n  //           parseInt(result[3], 16)]\r\n  // }\r\n\r\n  // // Converts a beta RGB color to a CHAD HEX color\r\n  // toHEX = (r, g, b) => '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b)\r\n\r\n  // // Converts the value of a given component to CHAD HEX\r\n  // componentToHex = (component) => {\r\n  //   const hex = component.toString(16)\r\n  //   return hex.length === 1 ? '0' + hex : hex\r\n  // }\r\n\r\n  arrayCalculation = (array1, array2, operation) =>\r\n  {\r\n    let newArray = [];\r\n    if(array1.length === array2.length)\r\n    {\r\n      switch(operation)\r\n      {\r\n        case \"+\":\r\n          for(var i = 0; i < array1.length; i++)\r\n          {\r\n            newArray.push(array1[i] + array2[i]);\r\n          }\r\n          return newArray;\r\n        case \"-\":\r\n          for(var i = 0; i < array1.length; i++)\r\n          {\r\n            newArray.push(array1[i] - array2[i]);\r\n          }\r\n          return newArray;\r\n      }\r\n    }\r\n  }\r\n\r\n  indexOf2dArray(id, matrix) {\r\n    for (var i=0, len=matrix.length; i<len; i++) {\r\n      for (var j=0, len2=matrix[i].length; j<len2; j++) {\r\n        if (matrix[i][j] === id) { return [i, j]; }\r\n      }\r\n    }\r\n    return [NaN, NaN];\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.layoutConfig.layout.map((value, y) => {\r\n          return (\r\n            <div className='button-row'>\r\n              {this.props.layoutConfig.layout[y].map((value, x) => {\r\n                switch (value) {\r\n                  case \"◻\":\r\n                    return <Button x={x} y={y} class=\"LEDButtonSquare\"color={this.state.colormap[x][y]} on={this.keyOn} off={this.keyOff}/>;\r\n                  case \"⬤\":\r\n                    return <Button x={x} y={y} class=\"LEDButtonCircle75\" \r\n                    color={this.state.colormap[x][y]} \r\n                    on={this.keyOn} off={this.keyOff}/>;\r\n                  case \"◪\":\r\n                  case \"⬕\":\r\n                  case \"⬔\":\r\n                  case \"◩\":\r\n                    return <Button x={x} y={y} class=\"LEDButtonSquare\" color={this.state.colormap[x][y]} on={this.keyOn} Zoff={this.keyOff}/>;\r\n                  default:\r\n                    return <div key={\"Spacer \" + x.toString() + \"-\" + y.toString()} style={{\r\n                      width: '96px'\r\n                    }}></div>;\r\n                }\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      {/* <button onClick={this.playAutoplay}>Auto Play</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\palette.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\projectFile.js",["139","140"],"import { Howl } from 'howler';\r\nimport KeyLED from \"./keyLED\"\r\nimport AutoPlay from \"./autoPlay\"\r\n\r\nclass ProjectFile {\r\n  info = {};\r\n  keySound = undefined;\r\n  autoplay = undefined;\r\n  keyLED = undefined;\r\n\r\n  constructor(file) {\r\n    return this.unpack(file);\r\n  }\r\n\r\n  unpack(projectFile) {\r\n    return new Promise(async (resolve, reject) => {\r\n      console.log(this.info)\r\n      let JSZip = require(\"jszip\");\r\n      let files = await JSZip.loadAsync(projectFile).then(function (zip) {\r\n        return Object.values(zip.files)\r\n      }, function (e) {\r\n        reject(\"Failed to extract selected file\");\r\n        console.log(e);\r\n        return;\r\n      });\r\n      let projectRoot = undefined;\r\n      let keySoundFile = undefined;\r\n      let autoplayFile = undefined;\r\n      let soundFiles = {};\r\n      let keyLEDFiles = {};\r\n\r\n      //Load info and categorize files\r\n      for (let file of files) {\r\n        if (!file.name.endsWith(\"/\")) //Ignore folder\r\n        {\r\n          if (file.name.toLowerCase().includes(\"sounds/\")) //Audio\r\n          {\r\n            console.log(\"Sound file: \" + file.name);\r\n            soundFiles[file.name.split(\"/\").pop()] = file;\r\n          }\r\n          else {\r\n            let text = await file.async(\"text\").then((text) => { return text = text.split(/\\r?\\n/); });\r\n            if (file.name.toLowerCase().endsWith(\"info\")) //Text\r\n            {\r\n              console.log(\"Info file: \" + file.name);\r\n              projectRoot = file.name.slice(0, -4);\r\n              console.log(\" project root: \" + projectRoot);\r\n              text.forEach(info => this.info[info.split('=')[0]] = info.split('=')[1]);\r\n              this.info[\"buttonX\"] = parseInt(this.info[\"buttonX\"]);\r\n              this.info[\"buttonY\"] = parseInt(this.info[\"buttonY\"]);\r\n              this.info[\"chain\"] = parseInt(this.info[\"chain\"]);\r\n              this.info[\"squareButton\"] = this.info[\"squareButton\"] === \"true\";\r\n              this.info[\"landscape\"] = this.info[\"landscape\"] === \"true\";\r\n              console.log(\" title: \" + this.info[\"title\"])\r\n              console.log(\" producerName: \" + this.info[\"producerName\"])\r\n              console.log(\" buttonX: \" + this.info[\"buttonX\"])\r\n              console.log(\" buttonY: \" + this.info[\"buttonY\"])\r\n              console.log(\" chain: \" + this.info[\"chain\"])\r\n              console.log(\" squareButton: \" + this.info[\"squareButton\"])\r\n              console.log(\" landscape: \" + this.info[\"landscape\"])\r\n              if (this.info[\"buttonX\"] !== 8 || this.info[\"buttonY\"] !== 8) {\r\n                reject(\"Only 8x8 Unipad project are supported\");\r\n                return;\r\n              }\r\n              if (this.info[\"chain\"] > 8) {\r\n                reject(\"Only Unipad project that has within 8 chains are supported\");\r\n                return;\r\n              }\r\n            }\r\n            else if (file.name.toLowerCase().endsWith(\"keysound\")) {\r\n              console.log(\"KeySound file: \" + file.name);\r\n              keySoundFile = text;\r\n            }\r\n            else if (file.name.toLowerCase().endsWith(\"autoplay\")) {\r\n              console.log(\"AutoPlay file: \" + file.name);\r\n              autoplayFile = text;\r\n            }\r\n            else if (file.name.toLowerCase().includes(\"keyled/\")) {\r\n              console.log(\"KeyLED file: \" + file.name);\r\n              keyLEDFiles[file.name] = text;\r\n            }\r\n            else {\r\n              console.log(\"Unknown file: \" + file.name);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      //Initialize 4D arraies\r\n      this.keySound = new Array(this.info.chain).fill(null).map(\r\n        () => new Array(this.info.buttonX).fill(null).map(\r\n          () => new Array(this.info.buttonY).fill(null).map(\r\n            () => new Array())));\r\n\r\n      this.keyLED = new Array(this.info.chain).fill(null).map(\r\n        () => new Array(this.info.buttonX).fill(null).map(\r\n          () => new Array(this.info.buttonY).fill(null).map(\r\n            () => new Array())));\r\n\r\n      // Load KeyLED\r\n      for (var [name, text] of Object.entries(keyLEDFiles)) {\r\n        let fileInfo = name.split(\"/\").pop().split(\" \");\r\n        if (fileInfo.length === 5) {\r\n          this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1][fileInfo[4].charCodeAt(0) - 97] = new KeyLED(text, parseInt(fileInfo[3]))\r\n        }\r\n        else if (fileInfo.length === 4) {\r\n          this.keyLED[parseInt(fileInfo[0]) - 1][parseInt(fileInfo[2]) - 1][parseInt(fileInfo[1]) - 1] = [new KeyLED(text, parseInt(fileInfo[3]))]\r\n        }\r\n        else {\r\n          console.warn(\"Unknown keyLED file name: \" + name);\r\n        }\r\n      }\r\n\r\n      //Load KeySound\r\n      for (var line of keySoundFile) {\r\n        let command = line.split(\" \");\r\n\r\n        if (command.length < 2) //For empty lines\r\n          continue;\r\n\r\n        // console.log(command);\r\n        this.keySound[parseInt(command[0]) - 1][parseInt(command[2]) - 1][parseInt(command[1]) - 1].push(\r\n          await soundFiles[command[3]].async(\"blob\").then(function (sound) {\r\n            sound = window.URL.createObjectURL(sound);\r\n            let format = command[3].split(\".\").pop()\r\n            return new Howl({ src: [sound], format: [format] });\r\n          }));\r\n      }\r\n\r\n      //Load AutoPlay\r\n      this.autoplay = new AutoPlay(autoplayFile);\r\n\r\n      resolve(this)\r\n    });\r\n  }\r\n}\r\n\r\nexport default ProjectFile;","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Components\\Spacer.jsx",["141"],"import React, { Component } from 'react'\r\nimport Pallete from '../palette'\r\n\r\nclass Spacer extends Component {\r\n    state = {}\r\n\r\n    setColor = (velocity) => {\r\n    }\r\n\r\n    render = () => (\r\n        <div>\r\n            <Spacer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spacer","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\keyLED.js",[],"C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\Engine\\autoPlay.js",["142"],"class AutoPlay\r\n{\r\n  autoplay = undefined;\r\n  status = \"STOPPED\"\r\n  progress = 0\r\n  currentChain = 0\r\n  constructor(text)\r\n  {\r\n    this.autoplay = text;\r\n  }\r\n\r\n  play = async(canvas, canvas_origin, callback) =>\r\n  {\r\n    console.log(canvas)\r\n    console.log(canvas_origin);\r\n    if(this.progress === 0)\r\n    {\r\n      canvas.initlalizeCanvas();\r\n      this.currentChain = parseInt(0);\r\n    }\r\n    this.status = \"PLAYING\"\r\n    for(this.progress; this.progress < this.autoplay.length; this.progress ++)\r\n    {\r\n      let wait_complete = true;\r\n      console.log(this.autoplay[this.progress])\r\n      let command = this.autoplay[this.progress].split(\" \");\r\n\r\n      if(callback !== undefined)\r\n        callback([this.progress, this.autoplay.length])\r\n      \r\n      if(command.length < 2)\r\n        continue;\r\n      \r\n      if(canvas.currentChain != this.currentChain)\r\n      {\r\n        canvas.chainChange(this.currentChain);\r\n      }\r\n      switch(command[0])\r\n      {\r\n        case 't':\r\n        case 'o':\r\n          canvas.keyOn(parseInt(command[2]) - 1 + canvas_origin[0], parseInt(command[1]) - 1 + canvas_origin[1]);\r\n          break;\r\n        case 'f':\r\n          canvas.keyOff(parseInt(command[2]) - 1 + canvas_origin[0], parseInt(command[1]) - 1 + canvas_origin[1]);\r\n          break;\r\n        case 'd':\r\n          // console.time(\"Autoplay wait\");\r\n          wait_complete = false;\r\n          this.wait(parseInt(command[1])).then(() => {wait_complete = true});\r\n          // console.timeEnd(\"Autoplay wait\");\r\n          // await this.better_wait(parseInt(parameter[1]));\r\n          break;\r\n        case 'c':\r\n        case 'chain':\r\n          canvas.chainChange(parseInt(command[1]) - 1);\r\n          this.currentChain = parseInt(command[1]) - 1;\r\n          break;\r\n        default:\r\n      }\r\n\r\n      do\r\n      {\r\n        if (this.status === \"STOPPED\" || this.status === \"PAUSED\")\r\n        {\r\n          this.progress ++;\r\n          return;\r\n        }\r\n        await this.wait(1000/120)\r\n      }while(!wait_complete)\r\n    }\r\n    this.status = \"STOPPED\"\r\n    this.progress = 0\r\n  }\r\n\r\n  pause() {\r\n    this.status = \"PAUSED\"\r\n  }\r\n\r\n  stop() {\r\n    this.status = \"STOPPED\"\r\n    this.progress = 0\r\n  }\r\n\r\n  wait(ms)\r\n  {\r\n    return new Promise(resolve => setTimeout(resolve, ms))\r\n  }\r\n}\r\n\r\nexport default AutoPlay;","C:\\Users\\caine\\Documents\\GitHub\\UntitledLaunchpadEmulator\\src\\config.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":16,"column":36,"nodeType":"154","messageId":"155","endLine":16,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":115,"column":13,"nodeType":"149","messageId":"158","endLine":115,"endColumn":22},{"ruleId":"156","severity":1,"message":"159","line":134,"column":13,"nodeType":"149","messageId":"158","endLine":134,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":135,"column":17,"nodeType":"149","messageId":"158","endLine":135,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":167,"column":11,"nodeType":"163","messageId":"164","endLine":177,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":51,"column":27,"nodeType":"154","messageId":"155","endLine":51,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":51,"column":52,"nodeType":"154","messageId":"155","endLine":51,"endColumn":54},{"ruleId":"156","severity":1,"message":"165","line":63,"column":15,"nodeType":"149","messageId":"158","endLine":63,"endColumn":16},{"ruleId":"156","severity":1,"message":"166","line":64,"column":15,"nodeType":"149","messageId":"158","endLine":64,"endColumn":16},{"ruleId":"156","severity":1,"message":"167","line":65,"column":15,"nodeType":"149","messageId":"158","endLine":65,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":72,"column":20,"nodeType":"154","messageId":"170","endLine":72,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":72,"column":29,"nodeType":"154","messageId":"170","endLine":72,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":123,"column":27,"nodeType":"154","messageId":"155","endLine":123,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":123,"column":52,"nodeType":"154","messageId":"155","endLine":123,"endColumn":54},{"ruleId":"171","severity":1,"message":"172","line":133,"column":9,"nodeType":"173","messageId":"174","endLine":136,"endColumn":33},{"ruleId":"156","severity":1,"message":"165","line":134,"column":15,"nodeType":"149","messageId":"158","endLine":134,"endColumn":16},{"ruleId":"156","severity":1,"message":"166","line":135,"column":15,"nodeType":"149","messageId":"158","endLine":135,"endColumn":16},{"ruleId":"156","severity":1,"message":"167","line":136,"column":15,"nodeType":"149","messageId":"158","endLine":136,"endColumn":18},{"ruleId":"171","severity":1,"message":"175","line":137,"column":9,"nodeType":"173","messageId":"176","endLine":142,"endColumn":63},{"ruleId":"168","severity":1,"message":"169","line":140,"column":24,"nodeType":"154","messageId":"170","endLine":140,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":140,"column":33,"nodeType":"154","messageId":"170","endLine":140,"endColumn":35},{"ruleId":"152","severity":1,"message":"153","line":192,"column":27,"nodeType":"154","messageId":"155","endLine":192,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":192,"column":52,"nodeType":"154","messageId":"155","endLine":192,"endColumn":54},{"ruleId":"156","severity":1,"message":"165","line":204,"column":15,"nodeType":"149","messageId":"158","endLine":204,"endColumn":16},{"ruleId":"156","severity":1,"message":"166","line":205,"column":15,"nodeType":"149","messageId":"158","endLine":205,"endColumn":16},{"ruleId":"156","severity":1,"message":"167","line":206,"column":15,"nodeType":"149","messageId":"158","endLine":206,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":213,"column":20,"nodeType":"154","messageId":"170","endLine":213,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":213,"column":29,"nodeType":"154","messageId":"170","endLine":213,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":268,"column":7,"nodeType":"179","messageId":"180","endLine":291,"endColumn":65},{"ruleId":"152","severity":1,"message":"153","line":268,"column":27,"nodeType":"154","messageId":"155","endLine":268,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":268,"column":52,"nodeType":"154","messageId":"155","endLine":268,"endColumn":54},{"ruleId":"156","severity":1,"message":"165","line":280,"column":15,"nodeType":"149","messageId":"158","endLine":280,"endColumn":16},{"ruleId":"156","severity":1,"message":"166","line":281,"column":15,"nodeType":"149","messageId":"158","endLine":281,"endColumn":16},{"ruleId":"156","severity":1,"message":"167","line":282,"column":15,"nodeType":"149","messageId":"158","endLine":282,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":289,"column":20,"nodeType":"154","messageId":"170","endLine":289,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":289,"column":29,"nodeType":"154","messageId":"170","endLine":289,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":339,"column":29,"nodeType":"154","messageId":"155","endLine":339,"endColumn":31},{"ruleId":"147","severity":1,"message":"181","line":350,"column":17,"nodeType":"149","messageId":"150","endLine":350,"endColumn":18},{"ruleId":"147","severity":1,"message":"182","line":351,"column":17,"nodeType":"149","messageId":"150","endLine":351,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":358,"column":22,"nodeType":"154","messageId":"170","endLine":358,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":358,"column":31,"nodeType":"154","messageId":"170","endLine":358,"endColumn":33},{"ruleId":"147","severity":1,"message":"183","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"143","replacedBy":"184"},{"ruleId":"145","replacedBy":"185"},{"ruleId":"147","severity":1,"message":"186","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":40,"column":5,"nodeType":"189","endLine":40,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":62,"column":8,"nodeType":"154","messageId":"192","endLine":62,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":62,"column":21,"nodeType":"154","messageId":"192","endLine":62,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":65,"column":7,"nodeType":"163","messageId":"164","endLine":76,"endColumn":8},{"ruleId":"152","severity":1,"message":"153","line":68,"column":34,"nodeType":"154","messageId":"155","endLine":68,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":73,"column":9,"nodeType":"173","messageId":"174","endLine":75,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":106,"column":53,"nodeType":"154","messageId":"155","endLine":106,"endColumn":55},{"ruleId":"152","severity":1,"message":"153","line":106,"column":115,"nodeType":"154","messageId":"155","endLine":106,"endColumn":117},{"ruleId":"187","severity":1,"message":"188","line":136,"column":5,"nodeType":"189","endLine":136,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":137,"column":32,"nodeType":"154","messageId":"155","endLine":137,"endColumn":34},{"ruleId":"187","severity":1,"message":"188","line":149,"column":7,"nodeType":"189","endLine":149,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":150,"column":34,"nodeType":"154","messageId":"155","endLine":150,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":150,"column":86,"nodeType":"154","messageId":"155","endLine":150,"endColumn":88},{"ruleId":"187","severity":1,"message":"188","line":161,"column":5,"nodeType":"189","endLine":161,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":170,"column":7,"nodeType":"189","endLine":170,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":193,"column":5,"nodeType":"163","messageId":"164","endLine":204,"endColumn":6},{"ruleId":"161","severity":1,"message":"162","line":244,"column":7,"nodeType":"163","messageId":"164","endLine":258,"endColumn":8},{"ruleId":"156","severity":1,"message":"160","line":253,"column":19,"nodeType":"149","messageId":"158","endLine":253,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":93,"column":19,"nodeType":"195","messageId":"196","endLine":93,"endColumn":30},{"ruleId":"193","severity":1,"message":"194","line":98,"column":19,"nodeType":"195","messageId":"196","endLine":98,"endColumn":30},{"ruleId":"147","severity":1,"message":"197","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":34,"column":30,"nodeType":"154","messageId":"155","endLine":34,"endColumn":32},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'midiInput' is already defined.","redeclared","'midiOutput' is already defined.","'i' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'x' is already defined.","'y' is already defined.","'hex' is already defined.","no-mixed-operators","Unexpected mix of '&' and '>>'.","unexpectedMixedOperator","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","no-unreachable","Unreachable code.","IfStatement","unreachableCode","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'Component' is defined but never used.",["198"],["199"],"'Spacer' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'Pallete' is defined but never used.","no-global-assign","no-unsafe-negation"]